Terminals unused in grammar

    ERROR


Grammar

    0 $accept: program "end of file"

    1 program: %empty
    2        | program function

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    4         | FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations
    7             | error declarations

    8 declaration: identifiers COLON INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifiers error INTEGER

   12 identifiers: ident
   13            | identifiers COMMA ident
   14            | identifiers error ident

   15 ident: IDENT

   16 statements: %empty
   17           | statement SEMICOLON statements
   18           | statement error statements

   19 statement: var ASSIGN expression
   20          | IF bool_expr THEN statements ENDIF
   21          | IF bool_expr THEN statements ELSE statements ENDIF
   22          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   23          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   24          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   25          | READ vars
   26          | WRITE vars
   27          | CONTINUE
   28          | RETURN expression
   29          | var error expression

   30 bool_expr: relation_and_expr
   31          | relation_and_expr OR bool_expr

   32 relation_and_expr: relation_expr
   33                  | relation_and_expr AND relation_expr

   34 relation_expr: NOT expression comp expression
   35              | NOT TRUE
   36              | NOT FALSE
   37              | NOT L_PAREN bool_expr R_PAREN
   38              | expression comp expression
   39              | TRUE
   40              | FALSE
   41              | L_PAREN bool_expr R_PAREN

   42 comp: EQ
   43     | NEQ
   44     | LT
   45     | GT
   46     | LTE
   47     | GTE

   48 expression: multiplicative_expr
   49           | expression ADD multiplicative_expr
   50           | expression SUB multiplicative_expr

   51 multiplicative_expr: term
   52                    | multiplicative_expr MULT term
   53                    | multiplicative_expr DIV term
   54                    | multiplicative_expr MOD term

   55 term: SUB var
   56     | SUB NUMBER
   57     | SUB L_PAREN expression R_PAREN
   58     | var
   59     | NUMBER
   60     | L_PAREN expression R_PAREN
   61     | IDENT L_PAREN expressions R_PAREN

   62 expressions: expression
   63            | expression COMMA expressions

   64 var: ident
   65    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   66 vars: var
   67     | var COMMA vars


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256) 4 7 11 14 18 29
    FUNCTION (258) 3 4
    BEGIN_PARAMS (259) 3 4
    END_PARAMS (260) 3 4
    BEGIN_LOCALS (261) 3 4
    END_LOCALS (262) 3 4
    BEGIN_BODY (263) 3 4
    END_BODY (264) 3 4
    INTEGER (265) 8 9 10 11
    ARRAY (266) 9 10
    OF (267) 9 10
    IF (268) 20 21
    THEN (269) 20 21
    ENDIF (270) 20 21
    ELSE (271) 21
    WHILE (272) 22 23
    DO (273) 23
    FOR (274) 24
    BEGINLOOP (275) 22 23 24
    ENDLOOP (276) 22 23 24
    CONTINUE (277) 27
    READ (278) 25
    WRITE (279) 26
    AND (280) 33
    OR (281) 31
    NOT (282) 34 35 36 37
    TRUE (283) 35 39
    FALSE (284) 36 40
    RETURN (285) 28
    SUB (286) 50 55 56 57
    ADD (287) 49
    MULT (288) 52
    DIV (289) 53
    MOD (290) 54
    EQ (291) 42
    NEQ (292) 43
    LT (293) 44
    GT (294) 45
    LTE (295) 46
    GTE (296) 47
    SEMICOLON (297) 3 6 17 24
    COLON (298) 8 9 10
    COMMA (299) 13 63 67
    L_PAREN (300) 37 41 57 60 61
    R_PAREN (301) 37 41 57 60 61
    L_SQUARE_BRACKET (302) 9 10 65
    R_SQUARE_BRACKET (303) 9 10 65
    ASSIGN (304) 19 24
    IDENT <cval> (305) 3 4 15 61
    NUMBER <ival> (306) 9 10 24 56 59
    ERROR (307)
    UMINUS (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1 2
        on right: 0 2
    function (56)
        on left: 3 4
        on right: 2
    declarations (57)
        on left: 5 6 7
        on right: 3 4 6 7
    declaration (58)
        on left: 8 9 10 11
        on right: 6
    identifiers (59)
        on left: 12 13 14
        on right: 8 9 10 11 13 14
    ident (60)
        on left: 15
        on right: 12 13 14 64 65
    statements (61)
        on left: 16 17 18
        on right: 3 4 17 18 20 21 22 23 24
    statement (62)
        on left: 19 20 21 22 23 24 25 26 27 28 29
        on right: 17 18
    bool_expr (63)
        on left: 30 31
        on right: 20 21 22 23 24 31 37 41
    relation_and_expr (64)
        on left: 32 33
        on right: 30 31 33
    relation_expr (65)
        on left: 34 35 36 37 38 39 40 41
        on right: 32 33
    comp (66)
        on left: 42 43 44 45 46 47
        on right: 34 38
    expression (67)
        on left: 48 49 50
        on right: 19 24 28 29 34 38 49 50 57 60 62 63 65
    multiplicative_expr (68)
        on left: 51 52 53 54
        on right: 48 49 50 52 53 54
    term (69)
        on left: 55 56 57 58 59 60 61
        on right: 51 52 53 54
    expressions (70)
        on left: 62 63
        on right: 61 63
    var (71)
        on left: 64 65
        on right: 19 24 29 55 58 66 67
    vars (72)
        on left: 66 67
        on right: 25 26 67


State 0

    0 $accept: • program "end of file"

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program • "end of file"
    2 program: program • function

    "end of file"  shift, and go to state 2
    FUNCTION       shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program "end of file" •

    $default  accept


State 3

    3 function: FUNCTION • IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    4         | FUNCTION • IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 4

    2 program: program function •

    $default  reduce using rule 2 (program)


State 5

    3 function: FUNCTION IDENT • SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    4         | FUNCTION IDENT • error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7


State 6

    4 function: FUNCTION IDENT error • BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 7

    3 function: FUNCTION IDENT SEMICOLON • BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 8

    4 function: FUNCTION IDENT error BEGIN_PARAMS • declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)

    declarations  go to state 12
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


State 9

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS • declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)

    declarations  go to state 16
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


State 10

    7 declarations: error • declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 17
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


State 11

   15 ident: IDENT •

    $default  reduce using rule 15 (ident)


State 12

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations • END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 18


State 13

    6 declarations: declaration • SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 14

    8 declaration: identifiers • COLON INTEGER
    9            | identifiers • COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers • COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifiers • error INTEGER
   13 identifiers: identifiers • COMMA ident
   14            | identifiers • error ident

    error  shift, and go to state 20
    COLON  shift, and go to state 21
    COMMA  shift, and go to state 22


State 15

   12 identifiers: ident •

    $default  reduce using rule 12 (identifiers)


State 16

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations • END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 23


State 17

    7 declarations: error declarations •

    $default  reduce using rule 7 (declarations)


State 18

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS • BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 24


State 19

    6 declarations: declaration SEMICOLON • declarations

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 25
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


State 20

   11 declaration: identifiers error • INTEGER
   14 identifiers: identifiers error • ident

    INTEGER  shift, and go to state 26
    IDENT    shift, and go to state 11

    ident  go to state 27


State 21

    8 declaration: identifiers COLON • INTEGER
    9            | identifiers COLON • ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON • ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 28
    ARRAY    shift, and go to state 29


State 22

   13 identifiers: identifiers COMMA • ident

    IDENT  shift, and go to state 11

    ident  go to state 30


State 23

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS • BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 31


State 24

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS • declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 32
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


State 25

    6 declarations: declaration SEMICOLON declarations •

    $default  reduce using rule 6 (declarations)


State 26

   11 declaration: identifiers error INTEGER •

    $default  reduce using rule 11 (declaration)


State 27

   14 identifiers: identifiers error ident •

    $default  reduce using rule 14 (identifiers)


State 28

    8 declaration: identifiers COLON INTEGER •

    $default  reduce using rule 8 (declaration)


State 29

    9 declaration: identifiers COLON ARRAY • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 33


State 30

   13 identifiers: identifiers COMMA ident •

    $default  reduce using rule 13 (identifiers)


State 31

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS • declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 34
    declaration   go to state 13
    identifiers   go to state 14
    ident         go to state 15


State 32

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations • END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 35


State 33

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 36


State 34

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations • END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 37


State 35

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS • BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 38


State 36

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 39


State 37

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS • BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 40


State 38

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY • statements END_BODY

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 11

    $default  reduce using rule 16 (statements)

    ident       go to state 49
    statements  go to state 50
    statement   go to state 51
    var         go to state 52


State 39

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 53
    L_SQUARE_BRACKET  shift, and go to state 54


State 40

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY • statements END_BODY

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 11

    $default  reduce using rule 16 (statements)

    ident       go to state 49
    statements  go to state 55
    statement   go to state 51
    var         go to state 52


State 41

   20 statement: IF • bool_expr THEN statements ENDIF
   21          | IF • bool_expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 56
    TRUE     shift, and go to state 57
    FALSE    shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    bool_expr            go to state 63
    relation_and_expr    go to state 64
    relation_expr        go to state 65
    expression           go to state 66
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 42

   22 statement: WHILE • bool_expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 56
    TRUE     shift, and go to state 57
    FALSE    shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    bool_expr            go to state 70
    relation_and_expr    go to state 64
    relation_expr        go to state 65
    expression           go to state 66
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 43

   23 statement: DO • BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 71


State 44

   24 statement: FOR • var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 11

    ident  go to state 49
    var    go to state 72


State 45

   27 statement: CONTINUE •

    $default  reduce using rule 27 (statement)


State 46

   25 statement: READ • vars

    IDENT  shift, and go to state 11

    ident  go to state 49
    var    go to state 73
    vars   go to state 74


State 47

   26 statement: WRITE • vars

    IDENT  shift, and go to state 11

    ident  go to state 49
    var    go to state 73
    vars   go to state 75


State 48

   28 statement: RETURN • expression

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 77
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 49

   64 var: ident •
   65    | ident • L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 78

    $default  reduce using rule 64 (var)


State 50

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements • END_BODY

    END_BODY  shift, and go to state 79


State 51

   17 statements: statement • SEMICOLON statements
   18           | statement • error statements

    error      shift, and go to state 80
    SEMICOLON  shift, and go to state 81


State 52

   19 statement: var • ASSIGN expression
   29          | var • error expression

    error   shift, and go to state 82
    ASSIGN  shift, and go to state 83


State 53

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF • INTEGER

    INTEGER  shift, and go to state 84


State 54

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 85


State 55

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements • END_BODY

    END_BODY  shift, and go to state 86


State 56

   34 relation_expr: NOT • expression comp expression
   35              | NOT • TRUE
   36              | NOT • FALSE
   37              | NOT • L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 87
    FALSE    shift, and go to state 88
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 89
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 90
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 57

   39 relation_expr: TRUE •

    $default  reduce using rule 39 (relation_expr)


State 58

   40 relation_expr: FALSE •

    $default  reduce using rule 40 (relation_expr)


State 59

   55 term: SUB • var
   56     | SUB • NUMBER
   57     | SUB • L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 91
    IDENT    shift, and go to state 11
    NUMBER   shift, and go to state 92

    ident  go to state 49
    var    go to state 93


State 60

   41 relation_expr: L_PAREN • bool_expr R_PAREN
   60 term: L_PAREN • expression R_PAREN

    NOT      shift, and go to state 56
    TRUE     shift, and go to state 57
    FALSE    shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    bool_expr            go to state 94
    relation_and_expr    go to state 64
    relation_expr        go to state 65
    expression           go to state 95
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 61

   15 ident: IDENT •
   61 term: IDENT • L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 96

    $default  reduce using rule 15 (ident)


State 62

   59 term: NUMBER •

    $default  reduce using rule 59 (term)


State 63

   20 statement: IF bool_expr • THEN statements ENDIF
   21          | IF bool_expr • THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 97


State 64

   30 bool_expr: relation_and_expr •
   31          | relation_and_expr • OR bool_expr
   33 relation_and_expr: relation_and_expr • AND relation_expr

    AND  shift, and go to state 98
    OR   shift, and go to state 99

    $default  reduce using rule 30 (bool_expr)


State 65

   32 relation_and_expr: relation_expr •

    $default  reduce using rule 32 (relation_and_expr)


State 66

   38 relation_expr: expression • comp expression
   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101
    EQ   shift, and go to state 102
    NEQ  shift, and go to state 103
    LT   shift, and go to state 104
    GT   shift, and go to state 105
    LTE  shift, and go to state 106
    GTE  shift, and go to state 107

    comp  go to state 108


State 67

   48 expression: multiplicative_expr •
   52 multiplicative_expr: multiplicative_expr • MULT term
   53                    | multiplicative_expr • DIV term
   54                    | multiplicative_expr • MOD term

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 111

    $default  reduce using rule 48 (expression)


State 68

   51 multiplicative_expr: term •

    $default  reduce using rule 51 (multiplicative_expr)


State 69

   58 term: var •

    $default  reduce using rule 58 (term)


State 70

   22 statement: WHILE bool_expr • BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 112


State 71

   23 statement: DO BEGINLOOP • statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 11

    $default  reduce using rule 16 (statements)

    ident       go to state 49
    statements  go to state 113
    statement   go to state 51
    var         go to state 52


State 72

   24 statement: FOR var • ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 114


State 73

   66 vars: var •
   67     | var • COMMA vars

    COMMA  shift, and go to state 115

    $default  reduce using rule 66 (vars)


State 74

   25 statement: READ vars •

    $default  reduce using rule 25 (statement)


State 75

   26 statement: WRITE vars •

    $default  reduce using rule 26 (statement)


State 76

   60 term: L_PAREN • expression R_PAREN

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 116
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 77

   28 statement: RETURN expression •
   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101

    $default  reduce using rule 28 (statement)


State 78

   65 var: ident L_SQUARE_BRACKET • expression R_SQUARE_BRACKET

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 117
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 79

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY •

    $default  reduce using rule 4 (function)


State 80

   18 statements: statement error • statements

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 11

    $default  reduce using rule 16 (statements)

    ident       go to state 49
    statements  go to state 118
    statement   go to state 51
    var         go to state 52


State 81

   17 statements: statement SEMICOLON • statements

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 11

    $default  reduce using rule 16 (statements)

    ident       go to state 49
    statements  go to state 119
    statement   go to state 51
    var         go to state 52


State 82

   29 statement: var error • expression

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 120
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 83

   19 statement: var ASSIGN • expression

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 121
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 84

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER •

    $default  reduce using rule 9 (declaration)


State 85

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 122


State 86

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY •

    $default  reduce using rule 3 (function)


State 87

   35 relation_expr: NOT TRUE •

    $default  reduce using rule 35 (relation_expr)


State 88

   36 relation_expr: NOT FALSE •

    $default  reduce using rule 36 (relation_expr)


State 89

   37 relation_expr: NOT L_PAREN • bool_expr R_PAREN
   60 term: L_PAREN • expression R_PAREN

    NOT      shift, and go to state 56
    TRUE     shift, and go to state 57
    FALSE    shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    bool_expr            go to state 123
    relation_and_expr    go to state 64
    relation_expr        go to state 65
    expression           go to state 95
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 90

   34 relation_expr: NOT expression • comp expression
   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101
    EQ   shift, and go to state 102
    NEQ  shift, and go to state 103
    LT   shift, and go to state 104
    GT   shift, and go to state 105
    LTE  shift, and go to state 106
    GTE  shift, and go to state 107

    comp  go to state 124


State 91

   57 term: SUB L_PAREN • expression R_PAREN

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 125
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 92

   56 term: SUB NUMBER •

    $default  reduce using rule 56 (term)


State 93

   55 term: SUB var •

    $default  reduce using rule 55 (term)


State 94

   41 relation_expr: L_PAREN bool_expr • R_PAREN

    R_PAREN  shift, and go to state 126


State 95

   38 relation_expr: expression • comp expression
   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr
   60 term: L_PAREN expression • R_PAREN

    SUB      shift, and go to state 100
    ADD      shift, and go to state 101
    EQ       shift, and go to state 102
    NEQ      shift, and go to state 103
    LT       shift, and go to state 104
    GT       shift, and go to state 105
    LTE      shift, and go to state 106
    GTE      shift, and go to state 107
    R_PAREN  shift, and go to state 127

    comp  go to state 108


State 96

   61 term: IDENT L_PAREN • expressions R_PAREN

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 128
    multiplicative_expr  go to state 67
    term                 go to state 68
    expressions          go to state 129
    var                  go to state 69


State 97

   20 statement: IF bool_expr THEN • statements ENDIF
   21          | IF bool_expr THEN • statements ELSE statements ENDIF

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 11

    $default  reduce using rule 16 (statements)

    ident       go to state 49
    statements  go to state 130
    statement   go to state 51
    var         go to state 52


State 98

   33 relation_and_expr: relation_and_expr AND • relation_expr

    NOT      shift, and go to state 56
    TRUE     shift, and go to state 57
    FALSE    shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    relation_expr        go to state 131
    expression           go to state 66
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 99

   31 bool_expr: relation_and_expr OR • bool_expr

    NOT      shift, and go to state 56
    TRUE     shift, and go to state 57
    FALSE    shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    bool_expr            go to state 132
    relation_and_expr    go to state 64
    relation_expr        go to state 65
    expression           go to state 66
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 100

   50 expression: expression SUB • multiplicative_expr

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    multiplicative_expr  go to state 133
    term                 go to state 68
    var                  go to state 69


State 101

   49 expression: expression ADD • multiplicative_expr

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    multiplicative_expr  go to state 134
    term                 go to state 68
    var                  go to state 69


State 102

   42 comp: EQ •

    $default  reduce using rule 42 (comp)


State 103

   43 comp: NEQ •

    $default  reduce using rule 43 (comp)


State 104

   44 comp: LT •

    $default  reduce using rule 44 (comp)


State 105

   45 comp: GT •

    $default  reduce using rule 45 (comp)


State 106

   46 comp: LTE •

    $default  reduce using rule 46 (comp)


State 107

   47 comp: GTE •

    $default  reduce using rule 47 (comp)


State 108

   38 relation_expr: expression comp • expression

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 135
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 109

   52 multiplicative_expr: multiplicative_expr MULT • term

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident  go to state 49
    term   go to state 136
    var    go to state 69


State 110

   53 multiplicative_expr: multiplicative_expr DIV • term

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident  go to state 49
    term   go to state 137
    var    go to state 69


State 111

   54 multiplicative_expr: multiplicative_expr MOD • term

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident  go to state 49
    term   go to state 138
    var    go to state 69


State 112

   22 statement: WHILE bool_expr BEGINLOOP • statements ENDLOOP

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 11

    $default  reduce using rule 16 (statements)

    ident       go to state 49
    statements  go to state 139
    statement   go to state 51
    var         go to state 52


State 113

   23 statement: DO BEGINLOOP statements • ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 140


State 114

   24 statement: FOR var ASSIGN • NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 141


State 115

   67 vars: var COMMA • vars

    IDENT  shift, and go to state 11

    ident  go to state 49
    var    go to state 73
    vars   go to state 142


State 116

   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr
   60 term: L_PAREN expression • R_PAREN

    SUB      shift, and go to state 100
    ADD      shift, and go to state 101
    R_PAREN  shift, and go to state 127


State 117

   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr
   65 var: ident L_SQUARE_BRACKET expression • R_SQUARE_BRACKET

    SUB               shift, and go to state 100
    ADD               shift, and go to state 101
    R_SQUARE_BRACKET  shift, and go to state 143


State 118

   18 statements: statement error statements •

    $default  reduce using rule 18 (statements)


State 119

   17 statements: statement SEMICOLON statements •

    $default  reduce using rule 17 (statements)


State 120

   29 statement: var error expression •
   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101

    $default  reduce using rule 29 (statement)


State 121

   19 statement: var ASSIGN expression •
   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101

    $default  reduce using rule 19 (statement)


State 122

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • OF INTEGER

    OF  shift, and go to state 144


State 123

   37 relation_expr: NOT L_PAREN bool_expr • R_PAREN

    R_PAREN  shift, and go to state 145


State 124

   34 relation_expr: NOT expression comp • expression

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 146
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 125

   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr
   57 term: SUB L_PAREN expression • R_PAREN

    SUB      shift, and go to state 100
    ADD      shift, and go to state 101
    R_PAREN  shift, and go to state 147


State 126

   41 relation_expr: L_PAREN bool_expr R_PAREN •

    $default  reduce using rule 41 (relation_expr)


State 127

   60 term: L_PAREN expression R_PAREN •

    $default  reduce using rule 60 (term)


State 128

   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr
   62 expressions: expression •
   63            | expression • COMMA expressions

    SUB    shift, and go to state 100
    ADD    shift, and go to state 101
    COMMA  shift, and go to state 148

    $default  reduce using rule 62 (expressions)


State 129

   61 term: IDENT L_PAREN expressions • R_PAREN

    R_PAREN  shift, and go to state 149


State 130

   20 statement: IF bool_expr THEN statements • ENDIF
   21          | IF bool_expr THEN statements • ELSE statements ENDIF

    ENDIF  shift, and go to state 150
    ELSE   shift, and go to state 151


State 131

   33 relation_and_expr: relation_and_expr AND relation_expr •

    $default  reduce using rule 33 (relation_and_expr)


State 132

   31 bool_expr: relation_and_expr OR bool_expr •

    $default  reduce using rule 31 (bool_expr)


State 133

   50 expression: expression SUB multiplicative_expr •
   52 multiplicative_expr: multiplicative_expr • MULT term
   53                    | multiplicative_expr • DIV term
   54                    | multiplicative_expr • MOD term

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 111

    $default  reduce using rule 50 (expression)


State 134

   49 expression: expression ADD multiplicative_expr •
   52 multiplicative_expr: multiplicative_expr • MULT term
   53                    | multiplicative_expr • DIV term
   54                    | multiplicative_expr • MOD term

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 111

    $default  reduce using rule 49 (expression)


State 135

   38 relation_expr: expression comp expression •
   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101

    $default  reduce using rule 38 (relation_expr)


State 136

   52 multiplicative_expr: multiplicative_expr MULT term •

    $default  reduce using rule 52 (multiplicative_expr)


State 137

   53 multiplicative_expr: multiplicative_expr DIV term •

    $default  reduce using rule 53 (multiplicative_expr)


State 138

   54 multiplicative_expr: multiplicative_expr MOD term •

    $default  reduce using rule 54 (multiplicative_expr)


State 139

   22 statement: WHILE bool_expr BEGINLOOP statements • ENDLOOP

    ENDLOOP  shift, and go to state 152


State 140

   23 statement: DO BEGINLOOP statements ENDLOOP • WHILE bool_expr

    WHILE  shift, and go to state 153


State 141

   24 statement: FOR var ASSIGN NUMBER • SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 154


State 142

   67 vars: var COMMA vars •

    $default  reduce using rule 67 (vars)


State 143

   65 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET •

    $default  reduce using rule 65 (var)


State 144

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF • INTEGER

    INTEGER  shift, and go to state 155


State 145

   37 relation_expr: NOT L_PAREN bool_expr R_PAREN •

    $default  reduce using rule 37 (relation_expr)


State 146

   34 relation_expr: NOT expression comp expression •
   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101

    $default  reduce using rule 34 (relation_expr)


State 147

   57 term: SUB L_PAREN expression R_PAREN •

    $default  reduce using rule 57 (term)


State 148

   63 expressions: expression COMMA • expressions

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 128
    multiplicative_expr  go to state 67
    term                 go to state 68
    expressions          go to state 156
    var                  go to state 69


State 149

   61 term: IDENT L_PAREN expressions R_PAREN •

    $default  reduce using rule 61 (term)


State 150

   20 statement: IF bool_expr THEN statements ENDIF •

    $default  reduce using rule 20 (statement)


State 151

   21 statement: IF bool_expr THEN statements ELSE • statements ENDIF

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 11

    $default  reduce using rule 16 (statements)

    ident       go to state 49
    statements  go to state 157
    statement   go to state 51
    var         go to state 52


State 152

   22 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP •

    $default  reduce using rule 22 (statement)


State 153

   23 statement: DO BEGINLOOP statements ENDLOOP WHILE • bool_expr

    NOT      shift, and go to state 56
    TRUE     shift, and go to state 57
    FALSE    shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    bool_expr            go to state 158
    relation_and_expr    go to state 64
    relation_expr        go to state 65
    expression           go to state 66
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 154

   24 statement: FOR var ASSIGN NUMBER SEMICOLON • bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 56
    TRUE     shift, and go to state 57
    FALSE    shift, and go to state 58
    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 60
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    bool_expr            go to state 159
    relation_and_expr    go to state 64
    relation_expr        go to state 65
    expression           go to state 66
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 155

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER •

    $default  reduce using rule 10 (declaration)


State 156

   63 expressions: expression COMMA expressions •

    $default  reduce using rule 63 (expressions)


State 157

   21 statement: IF bool_expr THEN statements ELSE statements • ENDIF

    ENDIF  shift, and go to state 160


State 158

   23 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr •

    $default  reduce using rule 23 (statement)


State 159

   24 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr • SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 161


State 160

   21 statement: IF bool_expr THEN statements ELSE statements ENDIF •

    $default  reduce using rule 21 (statement)


State 161

   24 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON • var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 11

    ident  go to state 49
    var    go to state 162


State 162

   24 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var • ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 163


State 163

   24 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN • expression BEGINLOOP statements ENDLOOP

    SUB      shift, and go to state 59
    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 61
    NUMBER   shift, and go to state 62

    ident                go to state 49
    expression           go to state 164
    multiplicative_expr  go to state 67
    term                 go to state 68
    var                  go to state 69


State 164

   24 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression • BEGINLOOP statements ENDLOOP
   49 expression: expression • ADD multiplicative_expr
   50           | expression • SUB multiplicative_expr

    BEGINLOOP  shift, and go to state 165
    SUB        shift, and go to state 100
    ADD        shift, and go to state 101


State 165

   24 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP • statements ENDLOOP

    IF        shift, and go to state 41
    WHILE     shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    CONTINUE  shift, and go to state 45
    READ      shift, and go to state 46
    WRITE     shift, and go to state 47
    RETURN    shift, and go to state 48
    IDENT     shift, and go to state 11

    $default  reduce using rule 16 (statements)

    ident       go to state 49
    statements  go to state 166
    statement   go to state 51
    var         go to state 52


State 166

   24 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements • ENDLOOP

    ENDLOOP  shift, and go to state 167


State 167

   24 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP •

    $default  reduce using rule 24 (statement)
