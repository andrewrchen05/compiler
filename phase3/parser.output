Terminals unused in grammar

    ERROR


Grammar

    0 $accept: start_prog "end of file"

    1 start_prog: program

    2 program: %empty
    3        | program function

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations
    7             | error declarations

    8 identifiers: ident
    9            | identifiers COMMA ident
   10            | identifiers error ident

   11 ident: IDENT

   12 declaration: identifiers COLON INTEGER
   13            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   15 statements: %empty
   16           | statement SEMICOLON statements
   17           | statement error statements

   18 statement: var ASSIGN expression
   19          | IF bool_expr THEN statements ENDIF
   20          | IF bool_expr THEN statements ELSE statements ENDIF
   21          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   22          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   23          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   24          | READ vars
   25          | WRITE vars
   26          | CONTINUE
   27          | RETURN expression
   28          | var error expression

   29 bool_expr: relation_and_expr
   30          | relation_and_expr OR bool_expr

   31 relation_and_expr: relation_expr
   32                  | relation_and_expr AND relation_expr

   33 relation_expr: NOT expression comp expression
   34              | NOT TRUE
   35              | NOT FALSE
   36              | NOT L_PAREN bool_expr R_PAREN
   37              | expression comp expression
   38              | TRUE
   39              | FALSE
   40              | L_PAREN bool_expr R_PAREN

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 expression: multiplicative_expr
   48           | expression ADD multiplicative_expr
   49           | expression SUB multiplicative_expr

   50 multiplicative_expr: term
   51                    | multiplicative_expr MULT term
   52                    | multiplicative_expr DIV term
   53                    | multiplicative_expr MOD term

   54 term: SUB var
   55     | SUB NUMBER
   56     | SUB L_PAREN expression R_PAREN
   57     | var
   58     | NUMBER
   59     | L_PAREN expression R_PAREN
   60     | IDENT L_PAREN expressions R_PAREN

   61 expressions: expression
   62            | expression COMMA expressions

   63 var: ident
   64    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   65 vars: var
   66     | var COMMA vars


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256) 7 10 17 28
    FUNCTION (258) 4
    BEGIN_PARAMS (259) 4
    END_PARAMS (260) 4
    BEGIN_LOCALS (261) 4
    END_LOCALS (262) 4
    BEGIN_BODY (263) 4
    END_BODY (264) 4
    INTEGER (265) 12 13 14
    ARRAY (266) 13 14
    OF (267) 13 14
    IF (268) 19 20
    THEN (269) 19 20
    ENDIF (270) 19 20
    ELSE (271) 20
    WHILE (272) 21 22
    DO (273) 22
    FOR (274) 23
    BEGINLOOP (275) 21 22 23
    ENDLOOP (276) 21 22 23
    CONTINUE (277) 26
    READ (278) 24
    WRITE (279) 25
    AND (280) 32
    OR (281) 30
    NOT (282) 33 34 35 36
    TRUE (283) 34 38
    FALSE (284) 35 39
    RETURN (285) 27
    SUB (286) 49 54 55 56
    ADD (287) 48
    MULT (288) 51
    DIV (289) 52
    MOD (290) 53
    EQ (291) 41
    NEQ (292) 42
    LT (293) 43
    GT (294) 44
    LTE (295) 45
    GTE (296) 46
    SEMICOLON (297) 4 6 16 23
    COLON (298) 12 13 14
    COMMA (299) 9 62 66
    L_PAREN (300) 36 40 56 59 60
    R_PAREN (301) 36 40 56 59 60
    L_SQUARE_BRACKET (302) 13 14 64
    R_SQUARE_BRACKET (303) 13 14 64
    ASSIGN (304) 18 23
    IDENT <string> (305) 4 11 60
    NUMBER <int> (306) 13 14 23 55 58
    ERROR (307)
    UMINUS (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    start_prog (55)
        on left: 1
        on right: 0
    program <string> (56)
        on left: 2 3
        on right: 1 3
    function <string> (57)
        on left: 4
        on right: 3
    declarations <dec_type> (58)
        on left: 5 6 7
        on right: 4 6 7
    identifiers <list<string>> (59)
        on left: 8 9 10
        on right: 9 10 12 13 14
    ident <string> (60)
        on left: 11
        on right: 8 9 10 63 64
    declaration <dec_type> (61)
        on left: 12 13 14
        on right: 6
    statements <string> (62)
        on left: 15 16 17
        on right: 4 16 17 19 20 21 22 23
    statement (63)
        on left: 18 19 20 21 22 23 24 25 26 27 28
        on right: 16 17
    bool_expr (64)
        on left: 29 30
        on right: 19 20 21 22 23 30 36 40
    relation_and_expr (65)
        on left: 31 32
        on right: 29 30 32
    relation_expr (66)
        on left: 33 34 35 36 37 38 39 40
        on right: 31 32
    comp (67)
        on left: 41 42 43 44 45 46
        on right: 33 37
    expression (68)
        on left: 47 48 49
        on right: 18 23 27 28 33 37 48 49 56 59 61 62 64
    multiplicative_expr (69)
        on left: 50 51 52 53
        on right: 47 48 49 51 52 53
    term (70)
        on left: 54 55 56 57 58 59 60
        on right: 50 51 52 53
    expressions (71)
        on left: 61 62
        on right: 60 62
    var (72)
        on left: 63 64
        on right: 18 23 28 54 57 65 66
    vars (73)
        on left: 65 66
        on right: 24 25 66


State 0

    0 $accept: • start_prog "end of file"

    $default  reduce using rule 2 (program)

    start_prog  go to state 1
    program     go to state 2


State 1

    0 $accept: start_prog • "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 start_prog: program •
    3 program: program • function

    FUNCTION  shift, and go to state 4

    $default  reduce using rule 1 (start_prog)

    function  go to state 5


State 3

    0 $accept: start_prog "end of file" •

    $default  accept


State 4

    4 function: FUNCTION • IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


State 5

    3 program: program function •

    $default  reduce using rule 3 (program)


State 6

    4 function: FUNCTION IDENT • SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 7


State 7

    4 function: FUNCTION IDENT SEMICOLON • BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS • declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 9
    IDENT  shift, and go to state 10

    END_PARAMS  reduce using rule 5 (declarations)

    declarations  go to state 11
    identifiers   go to state 12
    ident         go to state 13
    declaration   go to state 14


State 9

    7 declarations: error • declarations

    error  shift, and go to state 9
    IDENT  shift, and go to state 10

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 15
    identifiers   go to state 12
    ident         go to state 13
    declaration   go to state 14


State 10

   11 ident: IDENT •

    $default  reduce using rule 11 (ident)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations • END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 12

    9 identifiers: identifiers • COMMA ident
   10            | identifiers • error ident
   12 declaration: identifiers • COLON INTEGER
   13            | identifiers • COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14            | identifiers • COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    error  shift, and go to state 17
    COLON  shift, and go to state 18
    COMMA  shift, and go to state 19


State 13

    8 identifiers: ident •

    $default  reduce using rule 8 (identifiers)


State 14

    6 declarations: declaration • SEMICOLON declarations

    SEMICOLON  shift, and go to state 20


State 15

    7 declarations: error declarations •

    $default  reduce using rule 7 (declarations)


State 16

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS • BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 21


State 17

   10 identifiers: identifiers error • ident

    IDENT  shift, and go to state 10

    ident  go to state 22


State 18

   12 declaration: identifiers COLON • INTEGER
   13            | identifiers COLON • ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14            | identifiers COLON • ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 19

    9 identifiers: identifiers COMMA • ident

    IDENT  shift, and go to state 10

    ident  go to state 25


State 20

    6 declarations: declaration SEMICOLON • declarations

    error  shift, and go to state 9
    IDENT  shift, and go to state 10

    END_PARAMS  reduce using rule 5 (declarations)
    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 26
    identifiers   go to state 12
    ident         go to state 13
    declaration   go to state 14


State 21

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS • declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 9
    IDENT  shift, and go to state 10

    END_LOCALS  reduce using rule 5 (declarations)

    declarations  go to state 27
    identifiers   go to state 12
    ident         go to state 13
    declaration   go to state 14


State 22

   10 identifiers: identifiers error ident •

    $default  reduce using rule 10 (identifiers)


State 23

   12 declaration: identifiers COLON INTEGER •

    $default  reduce using rule 12 (declaration)


State 24

   13 declaration: identifiers COLON ARRAY • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14            | identifiers COLON ARRAY • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 25

    9 identifiers: identifiers COMMA ident •

    $default  reduce using rule 9 (identifiers)


State 26

    6 declarations: declaration SEMICOLON declarations •

    $default  reduce using rule 6 (declarations)


State 27

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations • END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET OF INTEGER
   14            | identifiers COLON ARRAY L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 29

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS • BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET OF INTEGER
   14            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY • statements END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 10

    $default  reduce using rule 15 (statements)

    ident       go to state 41
    statements  go to state 42
    statement   go to state 43
    var         go to state 44


State 32

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • OF INTEGER
   14            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 45
    L_SQUARE_BRACKET  shift, and go to state 46


State 33

   19 statement: IF • bool_expr THEN statements ENDIF
   20          | IF • bool_expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    bool_expr            go to state 54
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 34

   21 statement: WHILE • bool_expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    bool_expr            go to state 61
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 35

   22 statement: DO • BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 62


State 36

   23 statement: FOR • var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 10

    ident  go to state 41
    var    go to state 63


State 37

   26 statement: CONTINUE •

    $default  reduce using rule 26 (statement)


State 38

   24 statement: READ • vars

    IDENT  shift, and go to state 10

    ident  go to state 41
    var    go to state 64
    vars   go to state 65


State 39

   25 statement: WRITE • vars

    IDENT  shift, and go to state 10

    ident  go to state 41
    var    go to state 64
    vars   go to state 66


State 40

   27 statement: RETURN • expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 68
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 41

   63 var: ident •
   64    | ident • L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 63 (var)


State 42

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements • END_BODY

    END_BODY  shift, and go to state 70


State 43

   16 statements: statement • SEMICOLON statements
   17           | statement • error statements

    error      shift, and go to state 71
    SEMICOLON  shift, and go to state 72


State 44

   18 statement: var • ASSIGN expression
   28          | var • error expression

    error   shift, and go to state 73
    ASSIGN  shift, and go to state 74


State 45

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF • INTEGER

    INTEGER  shift, and go to state 75


State 46

   14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 76


State 47

   33 relation_expr: NOT • expression comp expression
   34              | NOT • TRUE
   35              | NOT • FALSE
   36              | NOT • L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 79
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 80
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 48

   38 relation_expr: TRUE •

    $default  reduce using rule 38 (relation_expr)


State 49

   39 relation_expr: FALSE •

    $default  reduce using rule 39 (relation_expr)


State 50

   54 term: SUB • var
   55     | SUB • NUMBER
   56     | SUB • L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 81
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 82

    ident  go to state 41
    var    go to state 83


State 51

   40 relation_expr: L_PAREN • bool_expr R_PAREN
   59 term: L_PAREN • expression R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    bool_expr            go to state 84
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 85
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 52

   11 ident: IDENT •
   60 term: IDENT • L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 86

    $default  reduce using rule 11 (ident)


State 53

   58 term: NUMBER •

    $default  reduce using rule 58 (term)


State 54

   19 statement: IF bool_expr • THEN statements ENDIF
   20          | IF bool_expr • THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 87


State 55

   29 bool_expr: relation_and_expr •
   30          | relation_and_expr • OR bool_expr
   32 relation_and_expr: relation_and_expr • AND relation_expr

    AND  shift, and go to state 88
    OR   shift, and go to state 89

    $default  reduce using rule 29 (bool_expr)


State 56

   31 relation_and_expr: relation_expr •

    $default  reduce using rule 31 (relation_and_expr)


State 57

   37 relation_expr: expression • comp expression
   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    LT   shift, and go to state 94
    GT   shift, and go to state 95
    LTE  shift, and go to state 96
    GTE  shift, and go to state 97

    comp  go to state 98


State 58

   47 expression: multiplicative_expr •
   51 multiplicative_expr: multiplicative_expr • MULT term
   52                    | multiplicative_expr • DIV term
   53                    | multiplicative_expr • MOD term

    MULT  shift, and go to state 99
    DIV   shift, and go to state 100
    MOD   shift, and go to state 101

    $default  reduce using rule 47 (expression)


State 59

   50 multiplicative_expr: term •

    $default  reduce using rule 50 (multiplicative_expr)


State 60

   57 term: var •

    $default  reduce using rule 57 (term)


State 61

   21 statement: WHILE bool_expr • BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 102


State 62

   22 statement: DO BEGINLOOP • statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 10

    $default  reduce using rule 15 (statements)

    ident       go to state 41
    statements  go to state 103
    statement   go to state 43
    var         go to state 44


State 63

   23 statement: FOR var • ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 104


State 64

   65 vars: var •
   66     | var • COMMA vars

    COMMA  shift, and go to state 105

    $default  reduce using rule 65 (vars)


State 65

   24 statement: READ vars •

    $default  reduce using rule 24 (statement)


State 66

   25 statement: WRITE vars •

    $default  reduce using rule 25 (statement)


State 67

   59 term: L_PAREN • expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 106
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 68

   27 statement: RETURN expression •
   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 27 (statement)


State 69

   64 var: ident L_SQUARE_BRACKET • expression R_SQUARE_BRACKET

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 107
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 70

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY •

    $default  reduce using rule 4 (function)


State 71

   17 statements: statement error • statements

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 10

    $default  reduce using rule 15 (statements)

    ident       go to state 41
    statements  go to state 108
    statement   go to state 43
    var         go to state 44


State 72

   16 statements: statement SEMICOLON • statements

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 10

    $default  reduce using rule 15 (statements)

    ident       go to state 41
    statements  go to state 109
    statement   go to state 43
    var         go to state 44


State 73

   28 statement: var error • expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 110
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 74

   18 statement: var ASSIGN • expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 111
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 75

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER •

    $default  reduce using rule 13 (declaration)


State 76

   14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 112


State 77

   34 relation_expr: NOT TRUE •

    $default  reduce using rule 34 (relation_expr)


State 78

   35 relation_expr: NOT FALSE •

    $default  reduce using rule 35 (relation_expr)


State 79

   36 relation_expr: NOT L_PAREN • bool_expr R_PAREN
   59 term: L_PAREN • expression R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    bool_expr            go to state 113
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 85
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 80

   33 relation_expr: NOT expression • comp expression
   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93
    LT   shift, and go to state 94
    GT   shift, and go to state 95
    LTE  shift, and go to state 96
    GTE  shift, and go to state 97

    comp  go to state 114


State 81

   56 term: SUB L_PAREN • expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 115
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 82

   55 term: SUB NUMBER •

    $default  reduce using rule 55 (term)


State 83

   54 term: SUB var •

    $default  reduce using rule 54 (term)


State 84

   40 relation_expr: L_PAREN bool_expr • R_PAREN

    R_PAREN  shift, and go to state 116


State 85

   37 relation_expr: expression • comp expression
   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr
   59 term: L_PAREN expression • R_PAREN

    SUB      shift, and go to state 90
    ADD      shift, and go to state 91
    EQ       shift, and go to state 92
    NEQ      shift, and go to state 93
    LT       shift, and go to state 94
    GT       shift, and go to state 95
    LTE      shift, and go to state 96
    GTE      shift, and go to state 97
    R_PAREN  shift, and go to state 117

    comp  go to state 98


State 86

   60 term: IDENT L_PAREN • expressions R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 118
    multiplicative_expr  go to state 58
    term                 go to state 59
    expressions          go to state 119
    var                  go to state 60


State 87

   19 statement: IF bool_expr THEN • statements ENDIF
   20          | IF bool_expr THEN • statements ELSE statements ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 10

    $default  reduce using rule 15 (statements)

    ident       go to state 41
    statements  go to state 120
    statement   go to state 43
    var         go to state 44


State 88

   32 relation_and_expr: relation_and_expr AND • relation_expr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    relation_expr        go to state 121
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 89

   30 bool_expr: relation_and_expr OR • bool_expr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    bool_expr            go to state 122
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 90

   49 expression: expression SUB • multiplicative_expr

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    multiplicative_expr  go to state 123
    term                 go to state 59
    var                  go to state 60


State 91

   48 expression: expression ADD • multiplicative_expr

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    multiplicative_expr  go to state 124
    term                 go to state 59
    var                  go to state 60


State 92

   41 comp: EQ •

    $default  reduce using rule 41 (comp)


State 93

   42 comp: NEQ •

    $default  reduce using rule 42 (comp)


State 94

   43 comp: LT •

    $default  reduce using rule 43 (comp)


State 95

   44 comp: GT •

    $default  reduce using rule 44 (comp)


State 96

   45 comp: LTE •

    $default  reduce using rule 45 (comp)


State 97

   46 comp: GTE •

    $default  reduce using rule 46 (comp)


State 98

   37 relation_expr: expression comp • expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 125
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 99

   51 multiplicative_expr: multiplicative_expr MULT • term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident  go to state 41
    term   go to state 126
    var    go to state 60


State 100

   52 multiplicative_expr: multiplicative_expr DIV • term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident  go to state 41
    term   go to state 127
    var    go to state 60


State 101

   53 multiplicative_expr: multiplicative_expr MOD • term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident  go to state 41
    term   go to state 128
    var    go to state 60


State 102

   21 statement: WHILE bool_expr BEGINLOOP • statements ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 10

    $default  reduce using rule 15 (statements)

    ident       go to state 41
    statements  go to state 129
    statement   go to state 43
    var         go to state 44


State 103

   22 statement: DO BEGINLOOP statements • ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 130


State 104

   23 statement: FOR var ASSIGN • NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 131


State 105

   66 vars: var COMMA • vars

    IDENT  shift, and go to state 10

    ident  go to state 41
    var    go to state 64
    vars   go to state 132


State 106

   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr
   59 term: L_PAREN expression • R_PAREN

    SUB      shift, and go to state 90
    ADD      shift, and go to state 91
    R_PAREN  shift, and go to state 117


State 107

   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr
   64 var: ident L_SQUARE_BRACKET expression • R_SQUARE_BRACKET

    SUB               shift, and go to state 90
    ADD               shift, and go to state 91
    R_SQUARE_BRACKET  shift, and go to state 133


State 108

   17 statements: statement error statements •

    $default  reduce using rule 17 (statements)


State 109

   16 statements: statement SEMICOLON statements •

    $default  reduce using rule 16 (statements)


State 110

   28 statement: var error expression •
   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 28 (statement)


State 111

   18 statement: var ASSIGN expression •
   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 18 (statement)


State 112

   14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • OF INTEGER

    OF  shift, and go to state 134


State 113

   36 relation_expr: NOT L_PAREN bool_expr • R_PAREN

    R_PAREN  shift, and go to state 135


State 114

   33 relation_expr: NOT expression comp • expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 136
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 115

   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr
   56 term: SUB L_PAREN expression • R_PAREN

    SUB      shift, and go to state 90
    ADD      shift, and go to state 91
    R_PAREN  shift, and go to state 137


State 116

   40 relation_expr: L_PAREN bool_expr R_PAREN •

    $default  reduce using rule 40 (relation_expr)


State 117

   59 term: L_PAREN expression R_PAREN •

    $default  reduce using rule 59 (term)


State 118

   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr
   61 expressions: expression •
   62            | expression • COMMA expressions

    SUB    shift, and go to state 90
    ADD    shift, and go to state 91
    COMMA  shift, and go to state 138

    $default  reduce using rule 61 (expressions)


State 119

   60 term: IDENT L_PAREN expressions • R_PAREN

    R_PAREN  shift, and go to state 139


State 120

   19 statement: IF bool_expr THEN statements • ENDIF
   20          | IF bool_expr THEN statements • ELSE statements ENDIF

    ENDIF  shift, and go to state 140
    ELSE   shift, and go to state 141


State 121

   32 relation_and_expr: relation_and_expr AND relation_expr •

    $default  reduce using rule 32 (relation_and_expr)


State 122

   30 bool_expr: relation_and_expr OR bool_expr •

    $default  reduce using rule 30 (bool_expr)


State 123

   49 expression: expression SUB multiplicative_expr •
   51 multiplicative_expr: multiplicative_expr • MULT term
   52                    | multiplicative_expr • DIV term
   53                    | multiplicative_expr • MOD term

    MULT  shift, and go to state 99
    DIV   shift, and go to state 100
    MOD   shift, and go to state 101

    $default  reduce using rule 49 (expression)


State 124

   48 expression: expression ADD multiplicative_expr •
   51 multiplicative_expr: multiplicative_expr • MULT term
   52                    | multiplicative_expr • DIV term
   53                    | multiplicative_expr • MOD term

    MULT  shift, and go to state 99
    DIV   shift, and go to state 100
    MOD   shift, and go to state 101

    $default  reduce using rule 48 (expression)


State 125

   37 relation_expr: expression comp expression •
   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 37 (relation_expr)


State 126

   51 multiplicative_expr: multiplicative_expr MULT term •

    $default  reduce using rule 51 (multiplicative_expr)


State 127

   52 multiplicative_expr: multiplicative_expr DIV term •

    $default  reduce using rule 52 (multiplicative_expr)


State 128

   53 multiplicative_expr: multiplicative_expr MOD term •

    $default  reduce using rule 53 (multiplicative_expr)


State 129

   21 statement: WHILE bool_expr BEGINLOOP statements • ENDLOOP

    ENDLOOP  shift, and go to state 142


State 130

   22 statement: DO BEGINLOOP statements ENDLOOP • WHILE bool_expr

    WHILE  shift, and go to state 143


State 131

   23 statement: FOR var ASSIGN NUMBER • SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 144


State 132

   66 vars: var COMMA vars •

    $default  reduce using rule 66 (vars)


State 133

   64 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET •

    $default  reduce using rule 64 (var)


State 134

   14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF • INTEGER

    INTEGER  shift, and go to state 145


State 135

   36 relation_expr: NOT L_PAREN bool_expr R_PAREN •

    $default  reduce using rule 36 (relation_expr)


State 136

   33 relation_expr: NOT expression comp expression •
   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 33 (relation_expr)


State 137

   56 term: SUB L_PAREN expression R_PAREN •

    $default  reduce using rule 56 (term)


State 138

   62 expressions: expression COMMA • expressions

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 118
    multiplicative_expr  go to state 58
    term                 go to state 59
    expressions          go to state 146
    var                  go to state 60


State 139

   60 term: IDENT L_PAREN expressions R_PAREN •

    $default  reduce using rule 60 (term)


State 140

   19 statement: IF bool_expr THEN statements ENDIF •

    $default  reduce using rule 19 (statement)


State 141

   20 statement: IF bool_expr THEN statements ELSE • statements ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 10

    $default  reduce using rule 15 (statements)

    ident       go to state 41
    statements  go to state 147
    statement   go to state 43
    var         go to state 44


State 142

   21 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP •

    $default  reduce using rule 21 (statement)


State 143

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE • bool_expr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    bool_expr            go to state 148
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 144

   23 statement: FOR var ASSIGN NUMBER SEMICOLON • bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    bool_expr            go to state 149
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 145

   14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER •

    $default  reduce using rule 14 (declaration)


State 146

   62 expressions: expression COMMA expressions •

    $default  reduce using rule 62 (expressions)


State 147

   20 statement: IF bool_expr THEN statements ELSE statements • ENDIF

    ENDIF  shift, and go to state 150


State 148

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr •

    $default  reduce using rule 22 (statement)


State 149

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr • SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 151


State 150

   20 statement: IF bool_expr THEN statements ELSE statements ENDIF •

    $default  reduce using rule 20 (statement)


State 151

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON • var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 10

    ident  go to state 41
    var    go to state 152


State 152

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var • ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 153


State 153

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN • expression BEGINLOOP statements ENDLOOP

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    ident                go to state 41
    expression           go to state 154
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 154

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression • BEGINLOOP statements ENDLOOP
   48 expression: expression • ADD multiplicative_expr
   49           | expression • SUB multiplicative_expr

    BEGINLOOP  shift, and go to state 155
    SUB        shift, and go to state 90
    ADD        shift, and go to state 91


State 155

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP • statements ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 10

    $default  reduce using rule 15 (statements)

    ident       go to state 41
    statements  go to state 156
    statement   go to state 43
    var         go to state 44


State 156

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements • ENDLOOP

    ENDLOOP  shift, and go to state 157


State 157

   23 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP •

    $default  reduce using rule 23 (statement)
