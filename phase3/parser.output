Terminals unused in grammar

    TRUE
    FALSE
    ERROR


Grammar

    0 $accept: start_prog "end of file"

    1 start_prog: program

    2 program: %empty
    3        | program function

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   10 identifiers: ident
   11            | ident COMMA identifiers

   12 ident: IDENT

   13 statements: %empty
   14           | statement SEMICOLON statements

   15 statement: var ASSIGN expression
   16          | IF bool_expr THEN statements ENDIF
   17          | IF bool_expr THEN statements ELSE statements ENDIF
   18          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   19          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   20          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   21          | READ vars
   22          | WRITE vars
   23          | CONTINUE
   24          | RETURN expression

   25 bool_expr: relation_and_expr
   26          | relation_and_expr OR bool_expr

   27 relation_and_expr: relation_expr
   28                  | relation_and_expr AND relation_expr

   29 relation_expr: NOT expression comp expression

   30 comp: EQ
   31     | NEQ
   32     | LT
   33     | GT
   34     | LTE
   35     | GTE

   36 expression: multiplicative_expr
   37           | expression ADD multiplicative_expr
   38           | expression SUB multiplicative_expr

   39 multiplicative_expr: term
   40                    | multiplicative_expr MULT term
   41                    | multiplicative_expr DIV term
   42                    | multiplicative_expr MOD term

   43 term: SUB var
   44     | SUB NUMBER
   45     | SUB L_PAREN expression R_PAREN
   46     | var
   47     | NUMBER
   48     | L_PAREN expression R_PAREN
   49     | IDENT L_PAREN expressions R_PAREN

   50 expressions: expression
   51            | expression COMMA expressions

   52 var: ident
   53    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   54 vars: var
   55     | var COMMA vars


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    FUNCTION (258) 4
    BEGIN_PARAMS (259) 4
    END_PARAMS (260) 4
    BEGIN_LOCALS (261) 4
    END_LOCALS (262) 4
    BEGIN_BODY (263) 4
    END_BODY (264) 4
    INTEGER (265) 7 8 9
    ARRAY (266) 8 9
    OF (267) 8 9
    IF (268) 16 17
    THEN (269) 16 17
    ENDIF (270) 16 17
    ELSE (271) 17
    WHILE (272) 18 19
    DO (273) 19
    FOR (274) 20
    BEGINLOOP (275) 18 19 20
    ENDLOOP (276) 18 19 20
    CONTINUE (277) 23
    READ (278) 21
    WRITE (279) 22
    AND (280) 28
    OR (281) 26
    NOT (282) 29
    TRUE (283)
    FALSE (284)
    RETURN (285) 24
    SUB (286) 38 43 44 45
    ADD (287) 37
    MULT (288) 40
    DIV (289) 41
    MOD (290) 42
    EQ (291) 30
    NEQ (292) 31
    LT (293) 32
    GT (294) 33
    LTE (295) 34
    GTE (296) 35
    SEMICOLON (297) 4 6 14 20
    COLON (298) 7 8 9
    COMMA (299) 11 51 55
    L_PAREN (300) 45 48 49
    R_PAREN (301) 45 48 49
    L_SQUARE_BRACKET (302) 8 9 53
    R_SQUARE_BRACKET (303) 8 9 53
    ASSIGN (304) 15 20
    IDENT <string> (305) 12 49
    NUMBER <int> (306) 8 9 20 44 47
    ERROR (307)
    UMINUS (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    start_prog (55)
        on left: 1
        on right: 0
    program <string> (56)
        on left: 2 3
        on right: 1 3
    function <string> (57)
        on left: 4
        on right: 3
    declarations <dec_type> (58)
        on left: 5 6
        on right: 4 6
    declaration <dec_type> (59)
        on left: 7 8 9
        on right: 6
    identifiers <vector<string>> (60)
        on left: 10 11
        on right: 7 8 9 11
    ident <string> (61)
        on left: 12
        on right: 4 10 11 52 53
    statements <string> (62)
        on left: 13 14
        on right: 4 14 16 17 18 19 20
    statement <string> (63)
        on left: 15 16 17 18 19 20 21 22 23 24
        on right: 14
    bool_expr <exp_type> (64)
        on left: 25 26
        on right: 16 17 18 19 20 26
    relation_and_expr <exp_type> (65)
        on left: 27 28
        on right: 25 26 28
    relation_expr <exp_type> (66)
        on left: 29
        on right: 27 28
    comp <string> (67)
        on left: 30 31 32 33 34 35
        on right: 29
    expression <exp_type> (68)
        on left: 36 37 38
        on right: 15 20 24 29 37 38 45 48 50 51 53
    multiplicative_expr <exp_type> (69)
        on left: 39 40 41 42
        on right: 36 37 38 40 41 42
    term <exp_type> (70)
        on left: 43 44 45 46 47 48 49
        on right: 39 40 41 42
    expressions <exp_type> (71)
        on left: 50 51
        on right: 49 51
    var <var_type> (72)
        on left: 52 53
        on right: 15 20 43 46 54 55
    vars <var_type> (73)
        on left: 54 55
        on right: 21 22 55


State 0

    0 $accept: • start_prog "end of file"

    $default  reduce using rule 2 (program)

    start_prog  go to state 1
    program     go to state 2


State 1

    0 $accept: start_prog • "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 start_prog: program •
    3 program: program • function

    FUNCTION  shift, and go to state 4

    $default  reduce using rule 1 (start_prog)

    function  go to state 5


State 3

    0 $accept: start_prog "end of file" •

    $default  accept


State 4

    4 function: FUNCTION • ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    ident  go to state 7


State 5

    3 program: program function •

    $default  reduce using rule 3 (program)


State 6

   12 ident: IDENT •

    $default  reduce using rule 12 (ident)


State 7

    4 function: FUNCTION ident • SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 8

    4 function: FUNCTION ident SEMICOLON • BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS • declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 5 (declarations)

    declarations  go to state 10
    declaration   go to state 11
    identifiers   go to state 12
    ident         go to state 13


State 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations • END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 14


State 11

    6 declarations: declaration • SEMICOLON declarations

    SEMICOLON  shift, and go to state 15


State 12

    7 declaration: identifiers • COLON INTEGER
    8            | identifiers • COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers • COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 16


State 13

   10 identifiers: ident •
   11            | ident • COMMA identifiers

    COMMA  shift, and go to state 17

    $default  reduce using rule 10 (identifiers)


State 14

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS • BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 15

    6 declarations: declaration SEMICOLON • declarations

    IDENT  shift, and go to state 6

    $default  reduce using rule 5 (declarations)

    declarations  go to state 19
    declaration   go to state 11
    identifiers   go to state 12
    ident         go to state 13


State 16

    7 declaration: identifiers COLON • INTEGER
    8            | identifiers COLON • ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON • ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21


State 17

   11 identifiers: ident COMMA • identifiers

    IDENT  shift, and go to state 6

    identifiers  go to state 22
    ident        go to state 13


State 18

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS • declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 11
    identifiers   go to state 12
    ident         go to state 13


State 19

    6 declarations: declaration SEMICOLON declarations •

    $default  reduce using rule 6 (declarations)


State 20

    7 declaration: identifiers COLON INTEGER •

    $default  reduce using rule 7 (declaration)


State 21

    8 declaration: identifiers COLON ARRAY • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ARRAY • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 22

   11 identifiers: ident COMMA identifiers •

    $default  reduce using rule 11 (identifiers)


State 23

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations • END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS • BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY • statements END_BODY

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 38
    statement   go to state 39
    var         go to state 40


State 28

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • OF INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 41
    L_SQUARE_BRACKET  shift, and go to state 42


State 29

   16 statement: IF • bool_expr THEN statements ENDIF
   17          | IF • bool_expr THEN statements ELSE statements ENDIF

    NOT  shift, and go to state 43

    bool_expr          go to state 44
    relation_and_expr  go to state 45
    relation_expr      go to state 46


State 30

   18 statement: WHILE • bool_expr BEGINLOOP statements ENDLOOP

    NOT  shift, and go to state 43

    bool_expr          go to state 47
    relation_and_expr  go to state 45
    relation_expr      go to state 46


State 31

   19 statement: DO • BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 48


State 32

   20 statement: FOR • var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 6

    ident  go to state 37
    var    go to state 49


State 33

   23 statement: CONTINUE •

    $default  reduce using rule 23 (statement)


State 34

   21 statement: READ • vars

    IDENT  shift, and go to state 6

    ident  go to state 37
    var    go to state 50
    vars   go to state 51


State 35

   22 statement: WRITE • vars

    IDENT  shift, and go to state 6

    ident  go to state 37
    var    go to state 50
    vars   go to state 52


State 36

   24 statement: RETURN • expression

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 37

   52 var: ident •
   53    | ident • L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 61

    $default  reduce using rule 52 (var)


State 38

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements • END_BODY

    END_BODY  shift, and go to state 62


State 39

   14 statements: statement • SEMICOLON statements

    SEMICOLON  shift, and go to state 63


State 40

   15 statement: var • ASSIGN expression

    ASSIGN  shift, and go to state 64


State 41

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF • INTEGER

    INTEGER  shift, and go to state 65


State 42

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 66


State 43

   29 relation_expr: NOT • expression comp expression

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    expression           go to state 67
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 44

   16 statement: IF bool_expr • THEN statements ENDIF
   17          | IF bool_expr • THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 68


State 45

   25 bool_expr: relation_and_expr •
   26          | relation_and_expr • OR bool_expr
   28 relation_and_expr: relation_and_expr • AND relation_expr

    AND  shift, and go to state 69
    OR   shift, and go to state 70

    $default  reduce using rule 25 (bool_expr)


State 46

   27 relation_and_expr: relation_expr •

    $default  reduce using rule 27 (relation_and_expr)


State 47

   18 statement: WHILE bool_expr • BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 71


State 48

   19 statement: DO BEGINLOOP • statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 72
    statement   go to state 39
    var         go to state 40


State 49

   20 statement: FOR var • ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 73


State 50

   54 vars: var •
   55     | var • COMMA vars

    COMMA  shift, and go to state 74

    $default  reduce using rule 54 (vars)


State 51

   21 statement: READ vars •

    $default  reduce using rule 21 (statement)


State 52

   22 statement: WRITE vars •

    $default  reduce using rule 22 (statement)


State 53

   43 term: SUB • var
   44     | SUB • NUMBER
   45     | SUB • L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 75
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 76

    ident  go to state 37
    var    go to state 77


State 54

   48 term: L_PAREN • expression R_PAREN

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    expression           go to state 78
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 55

   12 ident: IDENT •
   49 term: IDENT • L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 79

    $default  reduce using rule 12 (ident)


State 56

   47 term: NUMBER •

    $default  reduce using rule 47 (term)


State 57

   24 statement: RETURN expression •
   37 expression: expression • ADD multiplicative_expr
   38           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 80
    ADD  shift, and go to state 81

    $default  reduce using rule 24 (statement)


State 58

   36 expression: multiplicative_expr •
   40 multiplicative_expr: multiplicative_expr • MULT term
   41                    | multiplicative_expr • DIV term
   42                    | multiplicative_expr • MOD term

    MULT  shift, and go to state 82
    DIV   shift, and go to state 83
    MOD   shift, and go to state 84

    $default  reduce using rule 36 (expression)


State 59

   39 multiplicative_expr: term •

    $default  reduce using rule 39 (multiplicative_expr)


State 60

   46 term: var •

    $default  reduce using rule 46 (term)


State 61

   53 var: ident L_SQUARE_BRACKET • expression R_SQUARE_BRACKET

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    expression           go to state 85
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 62

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY •

    $default  reduce using rule 4 (function)


State 63

   14 statements: statement SEMICOLON • statements

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 86
    statement   go to state 39
    var         go to state 40


State 64

   15 statement: var ASSIGN • expression

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    expression           go to state 87
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 65

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER •

    $default  reduce using rule 8 (declaration)


State 66

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 88


State 67

   29 relation_expr: NOT expression • comp expression
   37 expression: expression • ADD multiplicative_expr
   38           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 80
    ADD  shift, and go to state 81
    EQ   shift, and go to state 89
    NEQ  shift, and go to state 90
    LT   shift, and go to state 91
    GT   shift, and go to state 92
    LTE  shift, and go to state 93
    GTE  shift, and go to state 94

    comp  go to state 95


State 68

   16 statement: IF bool_expr THEN • statements ENDIF
   17          | IF bool_expr THEN • statements ELSE statements ENDIF

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 96
    statement   go to state 39
    var         go to state 40


State 69

   28 relation_and_expr: relation_and_expr AND • relation_expr

    NOT  shift, and go to state 43

    relation_expr  go to state 97


State 70

   26 bool_expr: relation_and_expr OR • bool_expr

    NOT  shift, and go to state 43

    bool_expr          go to state 98
    relation_and_expr  go to state 45
    relation_expr      go to state 46


State 71

   18 statement: WHILE bool_expr BEGINLOOP • statements ENDLOOP

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 99
    statement   go to state 39
    var         go to state 40


State 72

   19 statement: DO BEGINLOOP statements • ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 100


State 73

   20 statement: FOR var ASSIGN • NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 101


State 74

   55 vars: var COMMA • vars

    IDENT  shift, and go to state 6

    ident  go to state 37
    var    go to state 50
    vars   go to state 102


State 75

   45 term: SUB L_PAREN • expression R_PAREN

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    expression           go to state 103
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 76

   44 term: SUB NUMBER •

    $default  reduce using rule 44 (term)


State 77

   43 term: SUB var •

    $default  reduce using rule 43 (term)


State 78

   37 expression: expression • ADD multiplicative_expr
   38           | expression • SUB multiplicative_expr
   48 term: L_PAREN expression • R_PAREN

    SUB      shift, and go to state 80
    ADD      shift, and go to state 81
    R_PAREN  shift, and go to state 104


State 79

   49 term: IDENT L_PAREN • expressions R_PAREN

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    expression           go to state 105
    multiplicative_expr  go to state 58
    term                 go to state 59
    expressions          go to state 106
    var                  go to state 60


State 80

   38 expression: expression SUB • multiplicative_expr

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    multiplicative_expr  go to state 107
    term                 go to state 59
    var                  go to state 60


State 81

   37 expression: expression ADD • multiplicative_expr

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    multiplicative_expr  go to state 108
    term                 go to state 59
    var                  go to state 60


State 82

   40 multiplicative_expr: multiplicative_expr MULT • term

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident  go to state 37
    term   go to state 109
    var    go to state 60


State 83

   41 multiplicative_expr: multiplicative_expr DIV • term

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident  go to state 37
    term   go to state 110
    var    go to state 60


State 84

   42 multiplicative_expr: multiplicative_expr MOD • term

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident  go to state 37
    term   go to state 111
    var    go to state 60


State 85

   37 expression: expression • ADD multiplicative_expr
   38           | expression • SUB multiplicative_expr
   53 var: ident L_SQUARE_BRACKET expression • R_SQUARE_BRACKET

    SUB               shift, and go to state 80
    ADD               shift, and go to state 81
    R_SQUARE_BRACKET  shift, and go to state 112


State 86

   14 statements: statement SEMICOLON statements •

    $default  reduce using rule 14 (statements)


State 87

   15 statement: var ASSIGN expression •
   37 expression: expression • ADD multiplicative_expr
   38           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 80
    ADD  shift, and go to state 81

    $default  reduce using rule 15 (statement)


State 88

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • OF INTEGER

    OF  shift, and go to state 113


State 89

   30 comp: EQ •

    $default  reduce using rule 30 (comp)


State 90

   31 comp: NEQ •

    $default  reduce using rule 31 (comp)


State 91

   32 comp: LT •

    $default  reduce using rule 32 (comp)


State 92

   33 comp: GT •

    $default  reduce using rule 33 (comp)


State 93

   34 comp: LTE •

    $default  reduce using rule 34 (comp)


State 94

   35 comp: GTE •

    $default  reduce using rule 35 (comp)


State 95

   29 relation_expr: NOT expression comp • expression

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    expression           go to state 114
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 96

   16 statement: IF bool_expr THEN statements • ENDIF
   17          | IF bool_expr THEN statements • ELSE statements ENDIF

    ENDIF  shift, and go to state 115
    ELSE   shift, and go to state 116


State 97

   28 relation_and_expr: relation_and_expr AND relation_expr •

    $default  reduce using rule 28 (relation_and_expr)


State 98

   26 bool_expr: relation_and_expr OR bool_expr •

    $default  reduce using rule 26 (bool_expr)


State 99

   18 statement: WHILE bool_expr BEGINLOOP statements • ENDLOOP

    ENDLOOP  shift, and go to state 117


State 100

   19 statement: DO BEGINLOOP statements ENDLOOP • WHILE bool_expr

    WHILE  shift, and go to state 118


State 101

   20 statement: FOR var ASSIGN NUMBER • SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 119


State 102

   55 vars: var COMMA vars •

    $default  reduce using rule 55 (vars)


State 103

   37 expression: expression • ADD multiplicative_expr
   38           | expression • SUB multiplicative_expr
   45 term: SUB L_PAREN expression • R_PAREN

    SUB      shift, and go to state 80
    ADD      shift, and go to state 81
    R_PAREN  shift, and go to state 120


State 104

   48 term: L_PAREN expression R_PAREN •

    $default  reduce using rule 48 (term)


State 105

   37 expression: expression • ADD multiplicative_expr
   38           | expression • SUB multiplicative_expr
   50 expressions: expression •
   51            | expression • COMMA expressions

    SUB    shift, and go to state 80
    ADD    shift, and go to state 81
    COMMA  shift, and go to state 121

    $default  reduce using rule 50 (expressions)


State 106

   49 term: IDENT L_PAREN expressions • R_PAREN

    R_PAREN  shift, and go to state 122


State 107

   38 expression: expression SUB multiplicative_expr •
   40 multiplicative_expr: multiplicative_expr • MULT term
   41                    | multiplicative_expr • DIV term
   42                    | multiplicative_expr • MOD term

    MULT  shift, and go to state 82
    DIV   shift, and go to state 83
    MOD   shift, and go to state 84

    $default  reduce using rule 38 (expression)


State 108

   37 expression: expression ADD multiplicative_expr •
   40 multiplicative_expr: multiplicative_expr • MULT term
   41                    | multiplicative_expr • DIV term
   42                    | multiplicative_expr • MOD term

    MULT  shift, and go to state 82
    DIV   shift, and go to state 83
    MOD   shift, and go to state 84

    $default  reduce using rule 37 (expression)


State 109

   40 multiplicative_expr: multiplicative_expr MULT term •

    $default  reduce using rule 40 (multiplicative_expr)


State 110

   41 multiplicative_expr: multiplicative_expr DIV term •

    $default  reduce using rule 41 (multiplicative_expr)


State 111

   42 multiplicative_expr: multiplicative_expr MOD term •

    $default  reduce using rule 42 (multiplicative_expr)


State 112

   53 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET •

    $default  reduce using rule 53 (var)


State 113

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF • INTEGER

    INTEGER  shift, and go to state 123


State 114

   29 relation_expr: NOT expression comp expression •
   37 expression: expression • ADD multiplicative_expr
   38           | expression • SUB multiplicative_expr

    SUB  shift, and go to state 80
    ADD  shift, and go to state 81

    $default  reduce using rule 29 (relation_expr)


State 115

   16 statement: IF bool_expr THEN statements ENDIF •

    $default  reduce using rule 16 (statement)


State 116

   17 statement: IF bool_expr THEN statements ELSE • statements ENDIF

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 124
    statement   go to state 39
    var         go to state 40


State 117

   18 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP •

    $default  reduce using rule 18 (statement)


State 118

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE • bool_expr

    NOT  shift, and go to state 43

    bool_expr          go to state 125
    relation_and_expr  go to state 45
    relation_expr      go to state 46


State 119

   20 statement: FOR var ASSIGN NUMBER SEMICOLON • bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT  shift, and go to state 43

    bool_expr          go to state 126
    relation_and_expr  go to state 45
    relation_expr      go to state 46


State 120

   45 term: SUB L_PAREN expression R_PAREN •

    $default  reduce using rule 45 (term)


State 121

   51 expressions: expression COMMA • expressions

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    expression           go to state 105
    multiplicative_expr  go to state 58
    term                 go to state 59
    expressions          go to state 127
    var                  go to state 60


State 122

   49 term: IDENT L_PAREN expressions R_PAREN •

    $default  reduce using rule 49 (term)


State 123

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER •

    $default  reduce using rule 9 (declaration)


State 124

   17 statement: IF bool_expr THEN statements ELSE statements • ENDIF

    ENDIF  shift, and go to state 128


State 125

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr •

    $default  reduce using rule 19 (statement)


State 126

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr • SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 129


State 127

   51 expressions: expression COMMA expressions •

    $default  reduce using rule 51 (expressions)


State 128

   17 statement: IF bool_expr THEN statements ELSE statements ENDIF •

    $default  reduce using rule 17 (statement)


State 129

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON • var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 6

    ident  go to state 37
    var    go to state 130


State 130

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var • ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 131


State 131

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN • expression BEGINLOOP statements ENDLOOP

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 55
    NUMBER   shift, and go to state 56

    ident                go to state 37
    expression           go to state 132
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 132

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression • BEGINLOOP statements ENDLOOP
   37 expression: expression • ADD multiplicative_expr
   38           | expression • SUB multiplicative_expr

    BEGINLOOP  shift, and go to state 133
    SUB        shift, and go to state 80
    ADD        shift, and go to state 81


State 133

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP • statements ENDLOOP

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 134
    statement   go to state 39
    var         go to state 40


State 134

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements • ENDLOOP

    ENDLOOP  shift, and go to state 135


State 135

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP •

    $default  reduce using rule 20 (statement)
