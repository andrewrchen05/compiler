Terminals unused in grammar

    ERROR


Grammar

    0 $accept: start_prog "end of file"

    1 start_prog: program

    2 program: %empty
    3        | program function

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   10 identifiers: ident
   11            | ident COMMA identifiers

   12 ident: IDENT

   13 statements: %empty
   14           | statement SEMICOLON statements

   15 statement: var ASSIGN expression
   16          | IF bool_expr THEN statements ENDIF
   17          | IF bool_expr THEN statements ELSE statements ENDIF
   18          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   19          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   20          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   21          | READ vars
   22          | WRITE vars
   23          | CONTINUE
   24          | RETURN expression

   25 bool_expr: relation_and_expr
   26          | relation_and_expr OR bool_expr

   27 relation_and_expr: relation_expr
   28                  | relation_and_expr AND relation_expr

   29 relation_expr: NOT expression comp expression
   30              | NOT TRUE
   31              | NOT FALSE
   32              | NOT L_PAREN bool_expr R_PAREN
   33              | expression comp expression
   34              | TRUE
   35              | FALSE
   36              | L_PAREN bool_expr R_PAREN

   37 comp: EQ
   38     | NEQ
   39     | LT
   40     | GT
   41     | LTE
   42     | GTE

   43 expression: multiplicative_expr
   44           | expression ADD multiplicative_expr
   45           | expression SUB multiplicative_expr

   46 multiplicative_expr: term
   47                    | multiplicative_expr MULT term
   48                    | multiplicative_expr DIV term
   49                    | multiplicative_expr MOD term

   50 term: SUB var
   51     | SUB NUMBER
   52     | SUB L_PAREN expression R_PAREN
   53     | var
   54     | NUMBER
   55     | L_PAREN expression R_PAREN
   56     | IDENT L_PAREN expressions R_PAREN

   57 expressions: expression
   58            | expression COMMA expressions

   59 var: ident
   60    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   61 vars: var
   62     | var COMMA vars


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    FUNCTION (258) 4
    BEGIN_PARAMS (259) 4
    END_PARAMS (260) 4
    BEGIN_LOCALS (261) 4
    END_LOCALS (262) 4
    BEGIN_BODY (263) 4
    END_BODY (264) 4
    INTEGER (265) 7 8 9
    ARRAY (266) 8 9
    OF (267) 8 9
    IF (268) 16 17
    THEN (269) 16 17
    ENDIF (270) 16 17
    ELSE (271) 17
    WHILE (272) 18 19
    DO (273) 19
    FOR (274) 20
    BEGINLOOP (275) 18 19 20
    ENDLOOP (276) 18 19 20
    CONTINUE (277) 23
    READ (278) 21
    WRITE (279) 22
    AND (280) 28
    OR (281) 26
    NOT (282) 29 30 31 32
    TRUE (283) 30 34
    FALSE (284) 31 35
    RETURN (285) 24
    SUB (286) 45 50 51 52
    ADD (287) 44
    MULT (288) 47
    DIV (289) 48
    MOD (290) 49
    EQ (291) 37
    NEQ (292) 38
    LT (293) 39
    GT (294) 40
    LTE (295) 41
    GTE (296) 42
    SEMICOLON (297) 4 6 14 20
    COLON (298) 7 8 9
    COMMA (299) 11 58 62
    L_PAREN (300) 32 36 52 55 56
    R_PAREN (301) 32 36 52 55 56
    L_SQUARE_BRACKET (302) 8 9 60
    R_SQUARE_BRACKET (303) 8 9 60
    ASSIGN (304) 15 20
    IDENT <string> (305) 12 56
    NUMBER <int> (306) 8 9 20 51 54
    ERROR (307)
    UMINUS (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    start_prog (55)
        on left: 1
        on right: 0
    program <string> (56)
        on left: 2 3
        on right: 1 3
    function <string> (57)
        on left: 4
        on right: 3
    declarations <dec_type> (58)
        on left: 5 6
        on right: 4 6
    declaration <dec_type> (59)
        on left: 7 8 9
        on right: 6
    identifiers <list<string>> (60)
        on left: 10 11
        on right: 7 8 9 11
    ident <string> (61)
        on left: 12
        on right: 4 10 11 59 60
    statements <string> (62)
        on left: 13 14
        on right: 4 14 16 17 18 19 20
    statement <string> (63)
        on left: 15 16 17 18 19 20 21 22 23 24
        on right: 14
    bool_expr <exp_type> (64)
        on left: 25 26
        on right: 16 17 18 19 20 26 32 36
    relation_and_expr <exp_type> (65)
        on left: 27 28
        on right: 25 26 28
    relation_expr <exp_type> (66)
        on left: 29 30 31 32 33 34 35 36
        on right: 27 28
    comp <string> (67)
        on left: 37 38 39 40 41 42
        on right: 29 33
    expression <exp_type> (68)
        on left: 43 44 45
        on right: 15 20 24 29 33 44 45 52 55 57 58 60
    multiplicative_expr <exp_type> (69)
        on left: 46 47 48 49
        on right: 43 44 45 47 48 49
    term <exp_type> (70)
        on left: 50 51 52 53 54 55 56
        on right: 46 47 48 49
    expressions <exp_type> (71)
        on left: 57 58
        on right: 56 58
    var <string> (72)
        on left: 59 60
        on right: 15 20 50 53 61 62
    vars <list<string>> (73)
        on left: 61 62
        on right: 21 22 62


State 0

    0 $accept: . start_prog "end of file"

    $default  reduce using rule 2 (program)

    start_prog  go to state 1
    program     go to state 2


State 1

    0 $accept: start_prog . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 start_prog: program .
    3 program: program . function

    FUNCTION  shift, and go to state 4

    $default  reduce using rule 1 (start_prog)

    function  go to state 5


State 3

    0 $accept: start_prog "end of file" .

    $default  accept


State 4

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    ident  go to state 7


State 5

    3 program: program function .

    $default  reduce using rule 3 (program)


State 6

   12 ident: IDENT .

    $default  reduce using rule 12 (ident)


State 7

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 8

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 5 (declarations)

    declarations  go to state 10
    declaration   go to state 11
    identifiers   go to state 12
    ident         go to state 13


State 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 14


State 11

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 15


State 12

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 16


State 13

   10 identifiers: ident .
   11            | ident . COMMA identifiers

    COMMA  shift, and go to state 17

    $default  reduce using rule 10 (identifiers)


State 14

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 15

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 6

    $default  reduce using rule 5 (declarations)

    declarations  go to state 19
    declaration   go to state 11
    identifiers   go to state 12
    ident         go to state 13


State 16

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21


State 17

   11 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 6

    identifiers  go to state 22
    ident        go to state 13


State 18

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 11
    identifiers   go to state 12
    ident         go to state 13


State 19

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 20

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 21

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 22

   11 identifiers: ident COMMA identifiers .

    $default  reduce using rule 11 (identifiers)


State 23

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 38
    statement   go to state 39
    var         go to state 40


State 28

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 41
    L_SQUARE_BRACKET  shift, and go to state 42


State 29

   16 statement: IF . bool_expr THEN statements ENDIF
   17          | IF . bool_expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    bool_expr            go to state 50
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 30

   18 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    bool_expr            go to state 57
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 31

   19 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 58


State 32

   20 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 6

    ident  go to state 37
    var    go to state 59


State 33

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 34

   21 statement: READ . vars

    IDENT  shift, and go to state 6

    ident  go to state 37
    var    go to state 60
    vars   go to state 61


State 35

   22 statement: WRITE . vars

    IDENT  shift, and go to state 6

    ident  go to state 37
    var    go to state 60
    vars   go to state 62


State 36

   24 statement: RETURN . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    expression           go to state 64
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 37

   59 var: ident .
   60    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 59 (var)


State 38

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 66


State 39

   14 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 67


State 40

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 68


State 41

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 69


State 42

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 70


State 43

   29 relation_expr: NOT . expression comp expression
   30              | NOT . TRUE
   31              | NOT . FALSE
   32              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 71
    FALSE    shift, and go to state 72
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    expression           go to state 74
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 44

   34 relation_expr: TRUE .

    $default  reduce using rule 34 (relation_expr)


State 45

   35 relation_expr: FALSE .

    $default  reduce using rule 35 (relation_expr)


State 46

   50 term: SUB . var
   51     | SUB . NUMBER
   52     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 75
    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 76

    ident  go to state 37
    var    go to state 77


State 47

   36 relation_expr: L_PAREN . bool_expr R_PAREN
   55 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    bool_expr            go to state 78
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 79
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 48

   12 ident: IDENT .
   56 term: IDENT . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 80

    $default  reduce using rule 12 (ident)


State 49

   54 term: NUMBER .

    $default  reduce using rule 54 (term)


State 50

   16 statement: IF bool_expr . THEN statements ENDIF
   17          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 81


State 51

   25 bool_expr: relation_and_expr .
   26          | relation_and_expr . OR bool_expr
   28 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 82
    OR   shift, and go to state 83

    $default  reduce using rule 25 (bool_expr)


State 52

   27 relation_and_expr: relation_expr .

    $default  reduce using rule 27 (relation_and_expr)


State 53

   33 relation_expr: expression . comp expression
   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 84
    ADD  shift, and go to state 85
    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89
    LTE  shift, and go to state 90
    GTE  shift, and go to state 91

    comp  go to state 92


State 54

   43 expression: multiplicative_expr .
   47 multiplicative_expr: multiplicative_expr . MULT term
   48                    | multiplicative_expr . DIV term
   49                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 93
    DIV   shift, and go to state 94
    MOD   shift, and go to state 95

    $default  reduce using rule 43 (expression)


State 55

   46 multiplicative_expr: term .

    $default  reduce using rule 46 (multiplicative_expr)


State 56

   53 term: var .

    $default  reduce using rule 53 (term)


State 57

   18 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 96


State 58

   19 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 97
    statement   go to state 39
    var         go to state 40


State 59

   20 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 98


State 60

   61 vars: var .
   62     | var . COMMA vars

    COMMA  shift, and go to state 99

    $default  reduce using rule 61 (vars)


State 61

   21 statement: READ vars .

    $default  reduce using rule 21 (statement)


State 62

   22 statement: WRITE vars .

    $default  reduce using rule 22 (statement)


State 63

   55 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    expression           go to state 100
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 64

   24 statement: RETURN expression .
   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 84
    ADD  shift, and go to state 85

    $default  reduce using rule 24 (statement)


State 65

   60 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    expression           go to state 101
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 66

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 67

   14 statements: statement SEMICOLON . statements

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 102
    statement   go to state 39
    var         go to state 40


State 68

   15 statement: var ASSIGN . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    expression           go to state 103
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 69

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 70

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 104


State 71

   30 relation_expr: NOT TRUE .

    $default  reduce using rule 30 (relation_expr)


State 72

   31 relation_expr: NOT FALSE .

    $default  reduce using rule 31 (relation_expr)


State 73

   32 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   55 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    bool_expr            go to state 105
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 79
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 74

   29 relation_expr: NOT expression . comp expression
   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 84
    ADD  shift, and go to state 85
    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89
    LTE  shift, and go to state 90
    GTE  shift, and go to state 91

    comp  go to state 106


State 75

   52 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    expression           go to state 107
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 76

   51 term: SUB NUMBER .

    $default  reduce using rule 51 (term)


State 77

   50 term: SUB var .

    $default  reduce using rule 50 (term)


State 78

   36 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 108


State 79

   33 relation_expr: expression . comp expression
   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr
   55 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 84
    ADD      shift, and go to state 85
    EQ       shift, and go to state 86
    NEQ      shift, and go to state 87
    LT       shift, and go to state 88
    GT       shift, and go to state 89
    LTE      shift, and go to state 90
    GTE      shift, and go to state 91
    R_PAREN  shift, and go to state 109

    comp  go to state 92


State 80

   56 term: IDENT L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    expression           go to state 110
    multiplicative_expr  go to state 54
    term                 go to state 55
    expressions          go to state 111
    var                  go to state 56


State 81

   16 statement: IF bool_expr THEN . statements ENDIF
   17          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 112
    statement   go to state 39
    var         go to state 40


State 82

   28 relation_and_expr: relation_and_expr AND . relation_expr

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    relation_expr        go to state 113
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 83

   26 bool_expr: relation_and_expr OR . bool_expr

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    bool_expr            go to state 114
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 84

   45 expression: expression SUB . multiplicative_expr

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    multiplicative_expr  go to state 115
    term                 go to state 55
    var                  go to state 56


State 85

   44 expression: expression ADD . multiplicative_expr

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    multiplicative_expr  go to state 116
    term                 go to state 55
    var                  go to state 56


State 86

   37 comp: EQ .

    $default  reduce using rule 37 (comp)


State 87

   38 comp: NEQ .

    $default  reduce using rule 38 (comp)


State 88

   39 comp: LT .

    $default  reduce using rule 39 (comp)


State 89

   40 comp: GT .

    $default  reduce using rule 40 (comp)


State 90

   41 comp: LTE .

    $default  reduce using rule 41 (comp)


State 91

   42 comp: GTE .

    $default  reduce using rule 42 (comp)


State 92

   33 relation_expr: expression comp . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    expression           go to state 117
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 93

   47 multiplicative_expr: multiplicative_expr MULT . term

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident  go to state 37
    term   go to state 118
    var    go to state 56


State 94

   48 multiplicative_expr: multiplicative_expr DIV . term

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident  go to state 37
    term   go to state 119
    var    go to state 56


State 95

   49 multiplicative_expr: multiplicative_expr MOD . term

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident  go to state 37
    term   go to state 120
    var    go to state 56


State 96

   18 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 121
    statement   go to state 39
    var         go to state 40


State 97

   19 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 122


State 98

   20 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 123


State 99

   62 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 37
    var    go to state 60
    vars   go to state 124


State 100

   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr
   55 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 84
    ADD      shift, and go to state 85
    R_PAREN  shift, and go to state 109


State 101

   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr
   60 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    SUB               shift, and go to state 84
    ADD               shift, and go to state 85
    R_SQUARE_BRACKET  shift, and go to state 125


State 102

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 103

   15 statement: var ASSIGN expression .
   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 84
    ADD  shift, and go to state 85

    $default  reduce using rule 15 (statement)


State 104

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 126


State 105

   32 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 127


State 106

   29 relation_expr: NOT expression comp . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    expression           go to state 128
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 107

   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr
   52 term: SUB L_PAREN expression . R_PAREN

    SUB      shift, and go to state 84
    ADD      shift, and go to state 85
    R_PAREN  shift, and go to state 129


State 108

   36 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 36 (relation_expr)


State 109

   55 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 55 (term)


State 110

   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr
   57 expressions: expression .
   58            | expression . COMMA expressions

    SUB    shift, and go to state 84
    ADD    shift, and go to state 85
    COMMA  shift, and go to state 130

    $default  reduce using rule 57 (expressions)


State 111

   56 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 131


State 112

   16 statement: IF bool_expr THEN statements . ENDIF
   17          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 132
    ELSE   shift, and go to state 133


State 113

   28 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 28 (relation_and_expr)


State 114

   26 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 26 (bool_expr)


State 115

   45 expression: expression SUB multiplicative_expr .
   47 multiplicative_expr: multiplicative_expr . MULT term
   48                    | multiplicative_expr . DIV term
   49                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 93
    DIV   shift, and go to state 94
    MOD   shift, and go to state 95

    $default  reduce using rule 45 (expression)


State 116

   44 expression: expression ADD multiplicative_expr .
   47 multiplicative_expr: multiplicative_expr . MULT term
   48                    | multiplicative_expr . DIV term
   49                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 93
    DIV   shift, and go to state 94
    MOD   shift, and go to state 95

    $default  reduce using rule 44 (expression)


State 117

   33 relation_expr: expression comp expression .
   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 84
    ADD  shift, and go to state 85

    $default  reduce using rule 33 (relation_expr)


State 118

   47 multiplicative_expr: multiplicative_expr MULT term .

    $default  reduce using rule 47 (multiplicative_expr)


State 119

   48 multiplicative_expr: multiplicative_expr DIV term .

    $default  reduce using rule 48 (multiplicative_expr)


State 120

   49 multiplicative_expr: multiplicative_expr MOD term .

    $default  reduce using rule 49 (multiplicative_expr)


State 121

   18 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 134


State 122

   19 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 135


State 123

   20 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 136


State 124

   62 vars: var COMMA vars .

    $default  reduce using rule 62 (vars)


State 125

   60 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 60 (var)


State 126

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 137


State 127

   32 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 32 (relation_expr)


State 128

   29 relation_expr: NOT expression comp expression .
   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 84
    ADD  shift, and go to state 85

    $default  reduce using rule 29 (relation_expr)


State 129

   52 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 52 (term)


State 130

   58 expressions: expression COMMA . expressions

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    expression           go to state 110
    multiplicative_expr  go to state 54
    term                 go to state 55
    expressions          go to state 138
    var                  go to state 56


State 131

   56 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 56 (term)


State 132

   16 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 16 (statement)


State 133

   17 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 139
    statement   go to state 39
    var         go to state 40


State 134

   18 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)


State 135

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    bool_expr            go to state 140
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 136

   20 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    bool_expr            go to state 141
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 137

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 138

   58 expressions: expression COMMA expressions .

    $default  reduce using rule 58 (expressions)


State 139

   17 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 142


State 140

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 19 (statement)


State 141

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 143


State 142

   17 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)


State 143

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 6

    ident  go to state 37
    var    go to state 144


State 144

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 145


State 145

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 63
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49

    ident                go to state 37
    expression           go to state 146
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 146

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP
   44 expression: expression . ADD multiplicative_expr
   45           | expression . SUB multiplicative_expr

    BEGINLOOP  shift, and go to state 147
    SUB        shift, and go to state 84
    ADD        shift, and go to state 85


State 147

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 6

    $default  reduce using rule 13 (statements)

    ident       go to state 37
    statements  go to state 148
    statement   go to state 39
    var         go to state 40


State 148

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 149


State 149

   20 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (statement)
