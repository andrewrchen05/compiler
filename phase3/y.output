Terminals unused in grammar

    ERROR


State 78 conflicts: 17 reduce/reduce
State 80 conflicts: 17 reduce/reduce
State 136 conflicts: 17 reduce/reduce


Grammar

    0 $accept: program "end of file"

    1 program: %empty
    2        | program function

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    4 declarations: %empty
    5             | declaration SEMICOLON declarations

    6 identifiers: ident
    7            | ident COMMA identifiers

    8 ident: IDENT

    9 declaration: identifiers COLON INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   12 statements: %empty
   13           | statement SEMICOLON statements

   14 statement: var ASSIGN expression
   15          | IF bool_expr THEN statements ENDIF
   16          | IF bool_expr THEN statements ELSE statements ENDIF
   17          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   18          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   19          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression
   24          | error

   25 bool_expr: relation_and_expr
   26          | relation_and_expr OR relation_and_expr

   27 relation_and_expr: relation_expr
   28                  | relation_expr AND relation_expr

   29 relation_expr: NOT expression comp expression
   30              | NOT TRUE
   31              | NOT FALSE
   32              | NOT L_PAREN bool_expr R_PAREN
   33              | expression comp expression
   34              | TRUE
   35              | FALSE
   36              | L_PAREN bool_expr R_PAREN

   37 comp: EQ
   38     | NEQ
   39     | LT
   40     | GT
   41     | LTE
   42     | GTE

   43 expression: multiplicative_expr
   44           | multiplicative_expr ADD multiplicative_expr
   45           | multiplicative_expr SUB multiplicative_expr
   46           | SUB multiplicative_expr
   47           | error

   48 multiplicative_expr: term
   49                    | term MULT term
   50                    | term DIV term
   51                    | term MOD term

   52 term: SUB var
   53     | SUB NUMBER
   54     | SUB L_PAREN expression R_PAREN
   55     | var
   56     | NUMBER
   57     | L_PAREN expression R_PAREN
   58     | IDENT L_PAREN expressions R_PAREN

   59 expressions: expression
   60            | expression COMMA expressions

   61 var: IDENT
   62    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   63 vars: var
   64     | var COMMA vars


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256) 24 47
    FUNCTION (258) 3
    BEGIN_PARAMS (259) 3
    END_PARAMS (260) 3
    BEGIN_LOCALS (261) 3
    END_LOCALS (262) 3
    BEGIN_BODY (263) 3
    END_BODY (264) 3
    INTEGER (265) 9 10 11
    ARRAY (266) 10 11
    OF (267) 10 11
    IF (268) 15 16
    THEN (269) 15 16
    ENDIF (270) 15 16
    ELSE (271) 16
    WHILE (272) 17 18
    DO (273) 18
    FOR (274) 19
    BEGINLOOP (275) 17 18 19
    ENDLOOP (276) 17 18 19
    CONTINUE (277) 22
    READ (278) 20
    WRITE (279) 21
    AND (280) 28
    OR (281) 26
    NOT (282) 29 30 31 32
    TRUE (283) 30 34
    FALSE (284) 31 35
    RETURN (285) 23
    SUB (286) 45 46 52 53 54
    ADD (287) 44
    MULT (288) 49
    DIV (289) 50
    MOD (290) 51
    EQ (291) 37
    NEQ (292) 38
    LT (293) 39
    GT (294) 40
    LTE (295) 41
    GTE (296) 42
    SEMICOLON (297) 3 5 13 19
    COLON (298) 9 10 11
    COMMA (299) 7 60 64
    L_PAREN (300) 32 36 54 57 58
    R_PAREN (301) 32 36 54 57 58
    L_SQUARE_BRACKET (302) 10 11 62
    R_SQUARE_BRACKET (303) 10 11 62
    ASSIGN (304) 14 19
    IDENT <string> (305) 8 58 61 62
    NUMBER <int> (306) 10 11 19 53 56
    ERROR (307)
    UMINUS (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program <string> (55)
        on left: 1 2
        on right: 0 2
    function <string> (56)
        on left: 3
        on right: 2
    declarations <dec_type> (57)
        on left: 4 5
        on right: 3 5
    identifiers <list<string>> (58)
        on left: 6 7
        on right: 7 9 10 11
    ident <string> (59)
        on left: 8
        on right: 3 6 7
    declaration <dec_type> (60)
        on left: 9 10 11
        on right: 5
    statements <string> (61)
        on left: 12 13
        on right: 3 13 15 16 17 18 19
    statement (62)
        on left: 14 15 16 17 18 19 20 21 22 23 24
        on right: 13
    bool_expr (63)
        on left: 25 26
        on right: 15 16 17 18 19 32 36
    relation_and_expr (64)
        on left: 27 28
        on right: 25 26
    relation_expr (65)
        on left: 29 30 31 32 33 34 35 36
        on right: 27 28
    comp (66)
        on left: 37 38 39 40 41 42
        on right: 29 33
    expression (67)
        on left: 43 44 45 46 47
        on right: 14 19 23 29 33 54 57 59 60 62
    multiplicative_expr (68)
        on left: 48 49 50 51
        on right: 43 44 45 46
    term (69)
        on left: 52 53 54 55 56 57 58
        on right: 48 49 50 51
    expressions (70)
        on left: 59 60
        on right: 58 60
    var (71)
        on left: 61 62
        on right: 14 19 52 55 63 64
    vars (72)
        on left: 63 64
        on right: 20 21 64


State 0

    0 $accept: • program "end of file"

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program • "end of file"
    2 program: program • function

    "end of file"  shift, and go to state 2
    FUNCTION       shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program "end of file" •

    $default  accept


State 3

    3 function: FUNCTION • ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 4

    2 program: program function •

    $default  reduce using rule 2 (program)


State 5

    8 ident: IDENT •

    $default  reduce using rule 8 (ident)


State 6

    3 function: FUNCTION ident • SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 7


State 7

    3 function: FUNCTION ident SEMICOLON • BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS • declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 4 (declarations)

    declarations  go to state 9
    identifiers   go to state 10
    ident         go to state 11
    declaration   go to state 12


State 9

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations • END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 13


State 10

    9 declaration: identifiers • COLON INTEGER
   10            | identifiers • COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifiers • COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 14


State 11

    6 identifiers: ident •
    7            | ident • COMMA identifiers

    COMMA  shift, and go to state 15

    $default  reduce using rule 6 (identifiers)


State 12

    5 declarations: declaration • SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS • BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 17


State 14

    9 declaration: identifiers COLON • INTEGER
   10            | identifiers COLON • ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifiers COLON • ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 18
    ARRAY    shift, and go to state 19


State 15

    7 identifiers: ident COMMA • identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 20
    ident        go to state 11


State 16

    5 declarations: declaration SEMICOLON • declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 4 (declarations)

    declarations  go to state 21
    identifiers   go to state 10
    ident         go to state 11
    declaration   go to state 12


State 17

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS • declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 4 (declarations)

    declarations  go to state 22
    identifiers   go to state 10
    ident         go to state 11
    declaration   go to state 12


State 18

    9 declaration: identifiers COLON INTEGER •

    $default  reduce using rule 9 (declaration)


State 19

   10 declaration: identifiers COLON ARRAY • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifiers COLON ARRAY • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 23


State 20

    7 identifiers: ident COMMA identifiers •

    $default  reduce using rule 7 (identifiers)


State 21

    5 declarations: declaration SEMICOLON declarations •

    $default  reduce using rule 5 (declarations)


State 22

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations • END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 24


State 23

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 25


State 24

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS • BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 26


State 25

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET OF INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 27


State 26

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY • statements END_BODY

    error     shift, and go to state 28
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    END_BODY  reduce using rule 12 (statements)

    statements  go to state 38
    statement   go to state 39
    var         go to state 40


State 27

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • OF INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 41
    L_SQUARE_BRACKET  shift, and go to state 42


State 28

   24 statement: error •

    $default  reduce using rule 24 (statement)


State 29

   15 statement: IF • bool_expr THEN statements ENDIF
   16          | IF • bool_expr THEN statements ELSE statements ENDIF

    error    shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 51
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 30

   17 statement: WHILE • bool_expr BEGINLOOP statements ENDLOOP

    error    shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 58
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 31

   18 statement: DO • BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 59


State 32

   19 statement: FOR • var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 37

    var  go to state 60


State 33

   22 statement: CONTINUE •

    $default  reduce using rule 22 (statement)


State 34

   20 statement: READ • vars

    IDENT  shift, and go to state 37

    var   go to state 61
    vars  go to state 62


State 35

   21 statement: WRITE • vars

    IDENT  shift, and go to state 37

    var   go to state 61
    vars  go to state 63


State 36

   23 statement: RETURN • expression

    error    shift, and go to state 43
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 65
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 37

   61 var: IDENT •
   62    | IDENT • L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 61 (var)


State 38

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements • END_BODY

    END_BODY  shift, and go to state 67


State 39

   13 statements: statement • SEMICOLON statements

    SEMICOLON  shift, and go to state 68


State 40

   14 statement: var • ASSIGN expression

    ASSIGN  shift, and go to state 69


State 41

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF • INTEGER

    INTEGER  shift, and go to state 70


State 42

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET • NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 71


State 43

   47 expression: error •

    $default  reduce using rule 47 (expression)


State 44

   29 relation_expr: NOT • expression comp expression
   30              | NOT • TRUE
   31              | NOT • FALSE
   32              | NOT • L_PAREN bool_expr R_PAREN

    error    shift, and go to state 43
    TRUE     shift, and go to state 72
    FALSE    shift, and go to state 73
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 75
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 45

   34 relation_expr: TRUE •

    $default  reduce using rule 34 (relation_expr)


State 46

   35 relation_expr: FALSE •

    $default  reduce using rule 35 (relation_expr)


State 47

   46 expression: SUB • multiplicative_expr
   52 term: SUB • var
   53     | SUB • NUMBER
   54     | SUB • L_PAREN expression R_PAREN

    SUB      shift, and go to state 76
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 78

    multiplicative_expr  go to state 79
    term                 go to state 56
    var                  go to state 80


State 48

   36 relation_expr: L_PAREN • bool_expr R_PAREN
   57 term: L_PAREN • expression R_PAREN

    error    shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 81
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 82
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 49

   58 term: IDENT • L_PAREN expressions R_PAREN
   61 var: IDENT •
   62    | IDENT • L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 83
    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 61 (var)


State 50

   56 term: NUMBER •

    $default  reduce using rule 56 (term)


State 51

   15 statement: IF bool_expr • THEN statements ENDIF
   16          | IF bool_expr • THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 84


State 52

   25 bool_expr: relation_and_expr •
   26          | relation_and_expr • OR relation_and_expr

    OR  shift, and go to state 85

    $default  reduce using rule 25 (bool_expr)


State 53

   27 relation_and_expr: relation_expr •
   28                  | relation_expr • AND relation_expr

    AND  shift, and go to state 86

    $default  reduce using rule 27 (relation_and_expr)


State 54

   33 relation_expr: expression • comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 93


State 55

   43 expression: multiplicative_expr •
   44           | multiplicative_expr • ADD multiplicative_expr
   45           | multiplicative_expr • SUB multiplicative_expr

    SUB  shift, and go to state 94
    ADD  shift, and go to state 95

    $default  reduce using rule 43 (expression)


State 56

   48 multiplicative_expr: term •
   49                    | term • MULT term
   50                    | term • DIV term
   51                    | term • MOD term

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 48 (multiplicative_expr)


State 57

   55 term: var •

    $default  reduce using rule 55 (term)


State 58

   17 statement: WHILE bool_expr • BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 99


State 59

   18 statement: DO BEGINLOOP • statements ENDLOOP WHILE bool_expr

    error     shift, and go to state 28
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    ENDLOOP  reduce using rule 12 (statements)

    statements  go to state 100
    statement   go to state 39
    var         go to state 40


State 60

   19 statement: FOR var • ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 101


State 61

   63 vars: var •
   64     | var • COMMA vars

    COMMA  shift, and go to state 102

    $default  reduce using rule 63 (vars)


State 62

   20 statement: READ vars •

    $default  reduce using rule 20 (statement)


State 63

   21 statement: WRITE vars •

    $default  reduce using rule 21 (statement)


State 64

   57 term: L_PAREN • expression R_PAREN

    error    shift, and go to state 43
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 103
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 65

   23 statement: RETURN expression •

    $default  reduce using rule 23 (statement)


State 66

   62 var: IDENT L_SQUARE_BRACKET • expression R_SQUARE_BRACKET

    error    shift, and go to state 43
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 104
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 67

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY •

    $default  reduce using rule 3 (function)


State 68

   13 statements: statement SEMICOLON • statements

    error     shift, and go to state 28
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    END_BODY  reduce using rule 12 (statements)
    ENDIF     reduce using rule 12 (statements)
    ELSE      reduce using rule 12 (statements)
    ENDLOOP   reduce using rule 12 (statements)

    statements  go to state 105
    statement   go to state 39
    var         go to state 40


State 69

   14 statement: var ASSIGN • expression

    error    shift, and go to state 43
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 106
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 70

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER •

    $default  reduce using rule 10 (declaration)


State 71

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER • R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 107


State 72

   30 relation_expr: NOT TRUE •

    $default  reduce using rule 30 (relation_expr)


State 73

   31 relation_expr: NOT FALSE •

    $default  reduce using rule 31 (relation_expr)


State 74

   32 relation_expr: NOT L_PAREN • bool_expr R_PAREN
   57 term: L_PAREN • expression R_PAREN

    error    shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 108
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 82
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 75

   29 relation_expr: NOT expression • comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 109


State 76

   52 term: SUB • var
   53     | SUB • NUMBER
   54     | SUB • L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 110
    IDENT    shift, and go to state 37
    NUMBER   shift, and go to state 111

    var  go to state 112


State 77

   54 term: SUB L_PAREN • expression R_PAREN
   57     | L_PAREN • expression R_PAREN

    error    shift, and go to state 43
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 113
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 78

   53 term: SUB NUMBER •
   56     | NUMBER •

    THEN              reduce using rule 53 (term)
    THEN              [reduce using rule 56 (term)]
    BEGINLOOP         reduce using rule 53 (term)
    BEGINLOOP         [reduce using rule 56 (term)]
    AND               reduce using rule 53 (term)
    AND               [reduce using rule 56 (term)]
    OR                reduce using rule 53 (term)
    OR                [reduce using rule 56 (term)]
    MULT              reduce using rule 53 (term)
    MULT              [reduce using rule 56 (term)]
    DIV               reduce using rule 53 (term)
    DIV               [reduce using rule 56 (term)]
    MOD               reduce using rule 53 (term)
    MOD               [reduce using rule 56 (term)]
    EQ                reduce using rule 53 (term)
    EQ                [reduce using rule 56 (term)]
    NEQ               reduce using rule 53 (term)
    NEQ               [reduce using rule 56 (term)]
    LT                reduce using rule 53 (term)
    LT                [reduce using rule 56 (term)]
    GT                reduce using rule 53 (term)
    GT                [reduce using rule 56 (term)]
    LTE               reduce using rule 53 (term)
    LTE               [reduce using rule 56 (term)]
    GTE               reduce using rule 53 (term)
    GTE               [reduce using rule 56 (term)]
    SEMICOLON         reduce using rule 53 (term)
    SEMICOLON         [reduce using rule 56 (term)]
    COMMA             reduce using rule 53 (term)
    COMMA             [reduce using rule 56 (term)]
    R_PAREN           reduce using rule 53 (term)
    R_PAREN           [reduce using rule 56 (term)]
    R_SQUARE_BRACKET  reduce using rule 53 (term)
    R_SQUARE_BRACKET  [reduce using rule 56 (term)]
    $default          reduce using rule 53 (term)


State 79

   46 expression: SUB multiplicative_expr •

    $default  reduce using rule 46 (expression)


State 80

   52 term: SUB var •
   55     | var •

    THEN              reduce using rule 52 (term)
    THEN              [reduce using rule 55 (term)]
    BEGINLOOP         reduce using rule 52 (term)
    BEGINLOOP         [reduce using rule 55 (term)]
    AND               reduce using rule 52 (term)
    AND               [reduce using rule 55 (term)]
    OR                reduce using rule 52 (term)
    OR                [reduce using rule 55 (term)]
    MULT              reduce using rule 52 (term)
    MULT              [reduce using rule 55 (term)]
    DIV               reduce using rule 52 (term)
    DIV               [reduce using rule 55 (term)]
    MOD               reduce using rule 52 (term)
    MOD               [reduce using rule 55 (term)]
    EQ                reduce using rule 52 (term)
    EQ                [reduce using rule 55 (term)]
    NEQ               reduce using rule 52 (term)
    NEQ               [reduce using rule 55 (term)]
    LT                reduce using rule 52 (term)
    LT                [reduce using rule 55 (term)]
    GT                reduce using rule 52 (term)
    GT                [reduce using rule 55 (term)]
    LTE               reduce using rule 52 (term)
    LTE               [reduce using rule 55 (term)]
    GTE               reduce using rule 52 (term)
    GTE               [reduce using rule 55 (term)]
    SEMICOLON         reduce using rule 52 (term)
    SEMICOLON         [reduce using rule 55 (term)]
    COMMA             reduce using rule 52 (term)
    COMMA             [reduce using rule 55 (term)]
    R_PAREN           reduce using rule 52 (term)
    R_PAREN           [reduce using rule 55 (term)]
    R_SQUARE_BRACKET  reduce using rule 52 (term)
    R_SQUARE_BRACKET  [reduce using rule 55 (term)]
    $default          reduce using rule 52 (term)


State 81

   36 relation_expr: L_PAREN bool_expr • R_PAREN

    R_PAREN  shift, and go to state 114


State 82

   33 relation_expr: expression • comp expression
   57 term: L_PAREN expression • R_PAREN

    EQ       shift, and go to state 87
    NEQ      shift, and go to state 88
    LT       shift, and go to state 89
    GT       shift, and go to state 90
    LTE      shift, and go to state 91
    GTE      shift, and go to state 92
    R_PAREN  shift, and go to state 115

    comp  go to state 93


State 83

   58 term: IDENT L_PAREN • expressions R_PAREN

    error    shift, and go to state 43
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 116
    multiplicative_expr  go to state 55
    term                 go to state 56
    expressions          go to state 117
    var                  go to state 57


State 84

   15 statement: IF bool_expr THEN • statements ENDIF
   16          | IF bool_expr THEN • statements ELSE statements ENDIF

    error     shift, and go to state 28
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    ENDIF  reduce using rule 12 (statements)
    ELSE   reduce using rule 12 (statements)

    statements  go to state 118
    statement   go to state 39
    var         go to state 40


State 85

   26 bool_expr: relation_and_expr OR • relation_and_expr

    error    shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    relation_and_expr    go to state 119
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 86

   28 relation_and_expr: relation_expr AND • relation_expr

    error    shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    relation_expr        go to state 120
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 87

   37 comp: EQ •

    $default  reduce using rule 37 (comp)


State 88

   38 comp: NEQ •

    $default  reduce using rule 38 (comp)


State 89

   39 comp: LT •

    $default  reduce using rule 39 (comp)


State 90

   40 comp: GT •

    $default  reduce using rule 40 (comp)


State 91

   41 comp: LTE •

    $default  reduce using rule 41 (comp)


State 92

   42 comp: GTE •

    $default  reduce using rule 42 (comp)


State 93

   33 relation_expr: expression comp • expression

    error    shift, and go to state 43
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 121
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 94

   45 expression: multiplicative_expr SUB • multiplicative_expr

    SUB      shift, and go to state 76
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    multiplicative_expr  go to state 122
    term                 go to state 56
    var                  go to state 57


State 95

   44 expression: multiplicative_expr ADD • multiplicative_expr

    SUB      shift, and go to state 76
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    multiplicative_expr  go to state 123
    term                 go to state 56
    var                  go to state 57


State 96

   49 multiplicative_expr: term MULT • term

    SUB      shift, and go to state 76
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    term  go to state 124
    var   go to state 57


State 97

   50 multiplicative_expr: term DIV • term

    SUB      shift, and go to state 76
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    term  go to state 125
    var   go to state 57


State 98

   51 multiplicative_expr: term MOD • term

    SUB      shift, and go to state 76
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    term  go to state 126
    var   go to state 57


State 99

   17 statement: WHILE bool_expr BEGINLOOP • statements ENDLOOP

    error     shift, and go to state 28
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    ENDLOOP  reduce using rule 12 (statements)

    statements  go to state 127
    statement   go to state 39
    var         go to state 40


State 100

   18 statement: DO BEGINLOOP statements • ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 128


State 101

   19 statement: FOR var ASSIGN • NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 129


State 102

   64 vars: var COMMA • vars

    IDENT  shift, and go to state 37

    var   go to state 61
    vars  go to state 130


State 103

   57 term: L_PAREN expression • R_PAREN

    R_PAREN  shift, and go to state 115


State 104

   62 var: IDENT L_SQUARE_BRACKET expression • R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 131


State 105

   13 statements: statement SEMICOLON statements •

    $default  reduce using rule 13 (statements)


State 106

   14 statement: var ASSIGN expression •

    $default  reduce using rule 14 (statement)


State 107

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET • OF INTEGER

    OF  shift, and go to state 132


State 108

   32 relation_expr: NOT L_PAREN bool_expr • R_PAREN

    R_PAREN  shift, and go to state 133


State 109

   29 relation_expr: NOT expression comp • expression

    error    shift, and go to state 43
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 134
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 110

   54 term: SUB L_PAREN • expression R_PAREN

    error    shift, and go to state 43
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 135
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 111

   53 term: SUB NUMBER •

    $default  reduce using rule 53 (term)


State 112

   52 term: SUB var •

    $default  reduce using rule 52 (term)


State 113

   54 term: SUB L_PAREN expression • R_PAREN
   57     | L_PAREN expression • R_PAREN

    R_PAREN  shift, and go to state 136


State 114

   36 relation_expr: L_PAREN bool_expr R_PAREN •

    $default  reduce using rule 36 (relation_expr)


State 115

   57 term: L_PAREN expression R_PAREN •

    $default  reduce using rule 57 (term)


State 116

   59 expressions: expression •
   60            | expression • COMMA expressions

    COMMA  shift, and go to state 137

    $default  reduce using rule 59 (expressions)


State 117

   58 term: IDENT L_PAREN expressions • R_PAREN

    R_PAREN  shift, and go to state 138


State 118

   15 statement: IF bool_expr THEN statements • ENDIF
   16          | IF bool_expr THEN statements • ELSE statements ENDIF

    ENDIF  shift, and go to state 139
    ELSE   shift, and go to state 140


State 119

   26 bool_expr: relation_and_expr OR relation_and_expr •

    $default  reduce using rule 26 (bool_expr)


State 120

   28 relation_and_expr: relation_expr AND relation_expr •

    $default  reduce using rule 28 (relation_and_expr)


State 121

   33 relation_expr: expression comp expression •

    $default  reduce using rule 33 (relation_expr)


State 122

   45 expression: multiplicative_expr SUB multiplicative_expr •

    $default  reduce using rule 45 (expression)


State 123

   44 expression: multiplicative_expr ADD multiplicative_expr •

    $default  reduce using rule 44 (expression)


State 124

   49 multiplicative_expr: term MULT term •

    $default  reduce using rule 49 (multiplicative_expr)


State 125

   50 multiplicative_expr: term DIV term •

    $default  reduce using rule 50 (multiplicative_expr)


State 126

   51 multiplicative_expr: term MOD term •

    $default  reduce using rule 51 (multiplicative_expr)


State 127

   17 statement: WHILE bool_expr BEGINLOOP statements • ENDLOOP

    ENDLOOP  shift, and go to state 141


State 128

   18 statement: DO BEGINLOOP statements ENDLOOP • WHILE bool_expr

    WHILE  shift, and go to state 142


State 129

   19 statement: FOR var ASSIGN NUMBER • SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 143


State 130

   64 vars: var COMMA vars •

    $default  reduce using rule 64 (vars)


State 131

   62 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET •

    $default  reduce using rule 62 (var)


State 132

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF • INTEGER

    INTEGER  shift, and go to state 144


State 133

   32 relation_expr: NOT L_PAREN bool_expr R_PAREN •

    $default  reduce using rule 32 (relation_expr)


State 134

   29 relation_expr: NOT expression comp expression •

    $default  reduce using rule 29 (relation_expr)


State 135

   54 term: SUB L_PAREN expression • R_PAREN

    R_PAREN  shift, and go to state 145


State 136

   54 term: SUB L_PAREN expression R_PAREN •
   57     | L_PAREN expression R_PAREN •

    THEN              reduce using rule 54 (term)
    THEN              [reduce using rule 57 (term)]
    BEGINLOOP         reduce using rule 54 (term)
    BEGINLOOP         [reduce using rule 57 (term)]
    AND               reduce using rule 54 (term)
    AND               [reduce using rule 57 (term)]
    OR                reduce using rule 54 (term)
    OR                [reduce using rule 57 (term)]
    MULT              reduce using rule 54 (term)
    MULT              [reduce using rule 57 (term)]
    DIV               reduce using rule 54 (term)
    DIV               [reduce using rule 57 (term)]
    MOD               reduce using rule 54 (term)
    MOD               [reduce using rule 57 (term)]
    EQ                reduce using rule 54 (term)
    EQ                [reduce using rule 57 (term)]
    NEQ               reduce using rule 54 (term)
    NEQ               [reduce using rule 57 (term)]
    LT                reduce using rule 54 (term)
    LT                [reduce using rule 57 (term)]
    GT                reduce using rule 54 (term)
    GT                [reduce using rule 57 (term)]
    LTE               reduce using rule 54 (term)
    LTE               [reduce using rule 57 (term)]
    GTE               reduce using rule 54 (term)
    GTE               [reduce using rule 57 (term)]
    SEMICOLON         reduce using rule 54 (term)
    SEMICOLON         [reduce using rule 57 (term)]
    COMMA             reduce using rule 54 (term)
    COMMA             [reduce using rule 57 (term)]
    R_PAREN           reduce using rule 54 (term)
    R_PAREN           [reduce using rule 57 (term)]
    R_SQUARE_BRACKET  reduce using rule 54 (term)
    R_SQUARE_BRACKET  [reduce using rule 57 (term)]
    $default          reduce using rule 54 (term)


State 137

   60 expressions: expression COMMA • expressions

    error    shift, and go to state 43
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 116
    multiplicative_expr  go to state 55
    term                 go to state 56
    expressions          go to state 146
    var                  go to state 57


State 138

   58 term: IDENT L_PAREN expressions R_PAREN •

    $default  reduce using rule 58 (term)


State 139

   15 statement: IF bool_expr THEN statements ENDIF •

    $default  reduce using rule 15 (statement)


State 140

   16 statement: IF bool_expr THEN statements ELSE • statements ENDIF

    error     shift, and go to state 28
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    ENDIF  reduce using rule 12 (statements)

    statements  go to state 147
    statement   go to state 39
    var         go to state 40


State 141

   17 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP •

    $default  reduce using rule 17 (statement)


State 142

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE • bool_expr

    error    shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 148
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 143

   19 statement: FOR var ASSIGN NUMBER SEMICOLON • bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    error    shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 149
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 144

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER •

    $default  reduce using rule 11 (declaration)


State 145

   54 term: SUB L_PAREN expression R_PAREN •

    $default  reduce using rule 54 (term)


State 146

   60 expressions: expression COMMA expressions •

    $default  reduce using rule 60 (expressions)


State 147

   16 statement: IF bool_expr THEN statements ELSE statements • ENDIF

    ENDIF  shift, and go to state 150


State 148

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr •

    $default  reduce using rule 18 (statement)


State 149

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr • SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 151


State 150

   16 statement: IF bool_expr THEN statements ELSE statements ENDIF •

    $default  reduce using rule 16 (statement)


State 151

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON • var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 37

    var  go to state 152


State 152

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var • ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 153


State 153

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN • expression BEGINLOOP statements ENDLOOP

    error    shift, and go to state 43
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 154
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 154

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression • BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 155


State 155

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP • statements ENDLOOP

    error     shift, and go to state 28
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    FOR       shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    ENDLOOP  reduce using rule 12 (statements)

    statements  go to state 156
    statement   go to state 39
    var         go to state 40


State 156

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements • ENDLOOP

    ENDLOOP  shift, and go to state 157


State 157

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP •

    $default  reduce using rule 19 (statement)
