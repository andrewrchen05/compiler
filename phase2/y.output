Terminals which are not used

   ERROR


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program function

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    4 declarations: /* empty */
    5             | declaration SEMICOLON declarations

    6 declaration: identifiers COLON INTEGER
    7            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    9 identifiers: ident
   10            | ident COMMA identifiers

   11 ident: IDENT

   12 statements: /* empty */
   13           | statement SEMICOLON statements

   14 statement: var ASSIGN expression
   15          | IF bool_expr THEN statements ENDIF
   16          | IF bool_expr THEN statements ELSE statements ENDIF
   17          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   18          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   19          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression
   24          | var error expression

   25 bool_expr: relation_and_expr
   26          | relation_and_expr OR relation_and_expr

   27 relation_and_expr: relation_expr
   28                  | relation_expr AND relation_expr

   29 relation_expr: NOT expression comp expression
   30              | NOT TRUE
   31              | NOT FALSE
   32              | NOT L_PAREN bool_expr R_PAREN
   33              | expression comp expression
   34              | TRUE
   35              | FALSE
   36              | L_PAREN bool_expr R_PAREN
   37              | expression error ';'

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE
   44     | error ';'

   45 expression: multiplicative_expr
   46           | multiplicative_expr ADD multiplicative_expr
   47           | multiplicative_expr SUB multiplicative_expr

   48 multiplicative_expr: term
   49                    | term MULT term
   50                    | term DIV term
   51                    | term MOD term

   52 term: SUB var
   53     | SUB NUMBER
   54     | SUB L_PAREN expression R_PAREN
   55     | var
   56     | NUMBER
   57     | L_PAREN expression R_PAREN
   58     | IDENT L_PAREN expressions R_PAREN

   59 expressions: expression
   60            | expression COMMA expressions

   61 var: IDENT
   62    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   63 vars: var
   64     | var COMMA vars


Terminals, with rules where they appear

$end (0) 0
';' (59) 37 44
error (256) 24 37 44
FUNCTION (258) 3
BEGIN_PARAMS (259) 3
END_PARAMS (260) 3
BEGIN_LOCALS (261) 3
END_LOCALS (262) 3
BEGIN_BODY (263) 3
END_BODY (264) 3
INTEGER (265) 6 7 8
ARRAY (266) 7 8
OF (267) 7 8
IF (268) 15 16
THEN (269) 15 16
ENDIF (270) 15 16
ELSE (271) 16
WHILE (272) 17 18
DO (273) 18
FOR (274) 19
BEGINLOOP (275) 17 18 19
ENDLOOP (276) 17 18 19
CONTINUE (277) 22
READ (278) 20
WRITE (279) 21
AND (280) 28
OR (281) 26
NOT (282) 29 30 31 32
TRUE (283) 30 34
FALSE (284) 31 35
RETURN (285) 23
SUB (286) 47 52 53 54
ADD (287) 46
MULT (288) 49
DIV (289) 50
MOD (290) 51
EQ (291) 38
NEQ (292) 39
LT (293) 40
GT (294) 41
LTE (295) 42
GTE (296) 43
SEMICOLON (297) 3 5 13 19
COLON (298) 6 7 8
COMMA (299) 10 60 64
L_PAREN (300) 32 36 54 57 58
R_PAREN (301) 32 36 54 57 58
L_SQUARE_BRACKET (302) 7 8 62
R_SQUARE_BRACKET (303) 7 8 62
ASSIGN (304) 14 19
IDENT (305) 3 11 58 61 62
NUMBER (306) 7 8 19 53 56
ERROR (307)
UMINUS (308)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1 2, on right: 0 2
function (57)
    on left: 3, on right: 2
declarations (58)
    on left: 4 5, on right: 3 5
declaration (59)
    on left: 6 7 8, on right: 5
identifiers (60)
    on left: 9 10, on right: 6 7 8 10
ident (61)
    on left: 11, on right: 9 10
statements (62)
    on left: 12 13, on right: 3 13 15 16 17 18 19
statement (63)
    on left: 14 15 16 17 18 19 20 21 22 23 24, on right: 13
bool_expr (64)
    on left: 25 26, on right: 15 16 17 18 19 32 36
relation_and_expr (65)
    on left: 27 28, on right: 25 26
relation_expr (66)
    on left: 29 30 31 32 33 34 35 36 37, on right: 27 28
comp (67)
    on left: 38 39 40 41 42 43 44, on right: 29 33
expression (68)
    on left: 45 46 47, on right: 14 19 23 24 29 33 37 54 57 59 60 62
multiplicative_expr (69)
    on left: 48 49 50 51, on right: 45 46 47
term (70)
    on left: 52 53 54 55 56 57 58, on right: 48 49 50 51
expressions (71)
    on left: 59 60, on right: 58 60
var (72)
    on left: 61 62, on right: 14 19 24 52 55 63 64
vars (73)
    on left: 63 64, on right: 20 21 64


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    2 program: program . function

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    function  go to state 4


state 2

    0 $accept: program $end .

    $default  accept


state 3

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


state 4

    2 program: program function .

    $default  reduce using rule 2 (program)


state 5

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 6


state 6

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 7


state 7

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 8

    $default  reduce using rule 4 (declarations)

    declarations  go to state 9
    declaration   go to state 10
    identifiers   go to state 11
    ident         go to state 12


state 8

   11 ident: IDENT .

    $default  reduce using rule 11 (ident)


state 9

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 13


state 10

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 14


state 11

    6 declaration: identifiers . COLON INTEGER
    7            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 15


state 12

    9 identifiers: ident .
   10            | ident . COMMA identifiers

    COMMA  shift, and go to state 16

    $default  reduce using rule 9 (identifiers)


state 13

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 17


state 14

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 8

    $default  reduce using rule 4 (declarations)

    declarations  go to state 18
    declaration   go to state 10
    identifiers   go to state 11
    ident         go to state 12


state 15

    6 declaration: identifiers COLON . INTEGER
    7            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 19
    ARRAY    shift, and go to state 20


state 16

   10 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 8

    identifiers  go to state 21
    ident        go to state 12


state 17

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 8

    $default  reduce using rule 4 (declarations)

    declarations  go to state 22
    declaration   go to state 10
    identifiers   go to state 11
    ident         go to state 12


state 18

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


state 19

    6 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 6 (declaration)


state 20

    7 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 23


state 21

   10 identifiers: ident COMMA identifiers .

    $default  reduce using rule 10 (identifiers)


state 22

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 24


state 23

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 25


state 24

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 26


state 25

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 27


state 26

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 12 (statements)

    statements  go to state 37
    statement   go to state 38
    var         go to state 39


state 27

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 40
    L_SQUARE_BRACKET  shift, and go to state 41


state 28

   15 statement: IF . bool_expr THEN statements ENDIF
   16          | IF . bool_expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    bool_expr            go to state 49
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 29

   17 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    bool_expr            go to state 56
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 30

   18 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 57


state 31

   19 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 36

    var  go to state 58


state 32

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


state 33

   20 statement: READ . vars

    IDENT  shift, and go to state 36

    var   go to state 59
    vars  go to state 60


state 34

   21 statement: WRITE . vars

    IDENT  shift, and go to state 36

    var   go to state 59
    vars  go to state 61


state 35

   23 statement: RETURN . expression

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 63
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 36

   61 var: IDENT .
   62    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 61 (var)


state 37

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 65


state 38

   13 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 66


state 39

   14 statement: var . ASSIGN expression
   24          | var . error expression

    error   shift, and go to state 67
    ASSIGN  shift, and go to state 68


state 40

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 69


state 41

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 70


state 42

   29 relation_expr: NOT . expression comp expression
   30              | NOT . TRUE
   31              | NOT . FALSE
   32              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 71
    FALSE    shift, and go to state 72
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 73
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 74
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 43

   34 relation_expr: TRUE .

    $default  reduce using rule 34 (relation_expr)


state 44

   35 relation_expr: FALSE .

    $default  reduce using rule 35 (relation_expr)


state 45

   52 term: SUB . var
   53     | SUB . NUMBER
   54     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 75
    IDENT    shift, and go to state 36
    NUMBER   shift, and go to state 76

    var  go to state 77


state 46

   36 relation_expr: L_PAREN . bool_expr R_PAREN
   57 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    bool_expr            go to state 78
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    expression           go to state 79
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 47

   58 term: IDENT . L_PAREN expressions R_PAREN
   61 var: IDENT .
   62    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 80
    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 61 (var)


state 48

   56 term: NUMBER .

    $default  reduce using rule 56 (term)


state 49

   15 statement: IF bool_expr . THEN statements ENDIF
   16          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 81


state 50

   25 bool_expr: relation_and_expr .
   26          | relation_and_expr . OR relation_and_expr

    OR  shift, and go to state 82

    $default  reduce using rule 25 (bool_expr)


state 51

   27 relation_and_expr: relation_expr .
   28                  | relation_expr . AND relation_expr

    AND  shift, and go to state 83

    $default  reduce using rule 27 (relation_and_expr)


state 52

   33 relation_expr: expression . comp expression
   37              | expression . error ';'

    error  shift, and go to state 84
    EQ     shift, and go to state 85
    NEQ    shift, and go to state 86
    LT     shift, and go to state 87
    GT     shift, and go to state 88
    LTE    shift, and go to state 89
    GTE    shift, and go to state 90

    comp  go to state 91


state 53

   45 expression: multiplicative_expr .
   46           | multiplicative_expr . ADD multiplicative_expr
   47           | multiplicative_expr . SUB multiplicative_expr

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 45 (expression)


state 54

   48 multiplicative_expr: term .
   49                    | term . MULT term
   50                    | term . DIV term
   51                    | term . MOD term

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 48 (multiplicative_expr)


state 55

   55 term: var .

    $default  reduce using rule 55 (term)


state 56

   17 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 97


state 57

   18 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 12 (statements)

    statements  go to state 98
    statement   go to state 38
    var         go to state 39


state 58

   19 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 99


state 59

   63 vars: var .
   64     | var . COMMA vars

    COMMA  shift, and go to state 100

    $default  reduce using rule 63 (vars)


state 60

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


state 61

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


state 62

   57 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 101
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 63

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


state 64

   62 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 102
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 65

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 3 (function)


state 66

   13 statements: statement SEMICOLON . statements

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 12 (statements)

    statements  go to state 103
    statement   go to state 38
    var         go to state 39


state 67

   24 statement: var error . expression

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 104
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 68

   14 statement: var ASSIGN . expression

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 105
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 69

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


state 70

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 106


state 71

   30 relation_expr: NOT TRUE .

    $default  reduce using rule 30 (relation_expr)


state 72

   31 relation_expr: NOT FALSE .

    $default  reduce using rule 31 (relation_expr)


state 73

   32 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   57 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    bool_expr            go to state 107
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    expression           go to state 79
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 74

   29 relation_expr: NOT expression . comp expression

    error  shift, and go to state 108
    EQ     shift, and go to state 85
    NEQ    shift, and go to state 86
    LT     shift, and go to state 87
    GT     shift, and go to state 88
    LTE    shift, and go to state 89
    GTE    shift, and go to state 90

    comp  go to state 109


state 75

   54 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 110
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 76

   53 term: SUB NUMBER .

    $default  reduce using rule 53 (term)


state 77

   52 term: SUB var .

    $default  reduce using rule 52 (term)


state 78

   36 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 111


state 79

   33 relation_expr: expression . comp expression
   37              | expression . error ';'
   57 term: L_PAREN expression . R_PAREN

    error    shift, and go to state 84
    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86
    LT       shift, and go to state 87
    GT       shift, and go to state 88
    LTE      shift, and go to state 89
    GTE      shift, and go to state 90
    R_PAREN  shift, and go to state 112

    comp  go to state 91


state 80

   58 term: IDENT L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 113
    multiplicative_expr  go to state 53
    term                 go to state 54
    expressions          go to state 114
    var                  go to state 55


state 81

   15 statement: IF bool_expr THEN . statements ENDIF
   16          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 12 (statements)

    statements  go to state 115
    statement   go to state 38
    var         go to state 39


state 82

   26 bool_expr: relation_and_expr OR . relation_and_expr

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    relation_and_expr    go to state 116
    relation_expr        go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 83

   28 relation_and_expr: relation_expr AND . relation_expr

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    relation_expr        go to state 117
    expression           go to state 52
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 84

   37 relation_expr: expression error . ';'
   44 comp: error . ';'

    ';'  shift, and go to state 118


state 85

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


state 86

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


state 87

   40 comp: LT .

    $default  reduce using rule 40 (comp)


state 88

   41 comp: GT .

    $default  reduce using rule 41 (comp)


state 89

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


state 90

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


state 91

   33 relation_expr: expression comp . expression

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 119
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 92

   47 expression: multiplicative_expr SUB . multiplicative_expr

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    multiplicative_expr  go to state 120
    term                 go to state 54
    var                  go to state 55


state 93

   46 expression: multiplicative_expr ADD . multiplicative_expr

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    multiplicative_expr  go to state 121
    term                 go to state 54
    var                  go to state 55


state 94

   49 multiplicative_expr: term MULT . term

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    term  go to state 122
    var   go to state 55


state 95

   50 multiplicative_expr: term DIV . term

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    term  go to state 123
    var   go to state 55


state 96

   51 multiplicative_expr: term MOD . term

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    term  go to state 124
    var   go to state 55


state 97

   17 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 12 (statements)

    statements  go to state 125
    statement   go to state 38
    var         go to state 39


state 98

   18 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 126


state 99

   19 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 127


state 100

   64 vars: var COMMA . vars

    IDENT  shift, and go to state 36

    var   go to state 59
    vars  go to state 128


state 101

   57 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112


state 102

   62 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 129


state 103

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


state 104

   24 statement: var error expression .

    $default  reduce using rule 24 (statement)


state 105

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


state 106

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 130


state 107

   32 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 131


state 108

   44 comp: error . ';'

    ';'  shift, and go to state 132


state 109

   29 relation_expr: NOT expression comp . expression

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 133
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 110

   54 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 134


state 111

   36 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 36 (relation_expr)


state 112

   57 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (term)


state 113

   59 expressions: expression .
   60            | expression . COMMA expressions

    COMMA  shift, and go to state 135

    $default  reduce using rule 59 (expressions)


state 114

   58 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 136


state 115

   15 statement: IF bool_expr THEN statements . ENDIF
   16          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 137
    ELSE   shift, and go to state 138


state 116

   26 bool_expr: relation_and_expr OR relation_and_expr .

    $default  reduce using rule 26 (bool_expr)


state 117

   28 relation_and_expr: relation_expr AND relation_expr .

    $default  reduce using rule 28 (relation_and_expr)


state 118

   37 relation_expr: expression error ';' .
   44 comp: error ';' .

    SUB       reduce using rule 44 (comp)
    L_PAREN   reduce using rule 44 (comp)
    IDENT     reduce using rule 44 (comp)
    NUMBER    reduce using rule 44 (comp)
    $default  reduce using rule 37 (relation_expr)


state 119

   33 relation_expr: expression comp expression .

    $default  reduce using rule 33 (relation_expr)


state 120

   47 expression: multiplicative_expr SUB multiplicative_expr .

    $default  reduce using rule 47 (expression)


state 121

   46 expression: multiplicative_expr ADD multiplicative_expr .

    $default  reduce using rule 46 (expression)


state 122

   49 multiplicative_expr: term MULT term .

    $default  reduce using rule 49 (multiplicative_expr)


state 123

   50 multiplicative_expr: term DIV term .

    $default  reduce using rule 50 (multiplicative_expr)


state 124

   51 multiplicative_expr: term MOD term .

    $default  reduce using rule 51 (multiplicative_expr)


state 125

   17 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 139


state 126

   18 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 140


state 127

   19 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 141


state 128

   64 vars: var COMMA vars .

    $default  reduce using rule 64 (vars)


state 129

   62 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 62 (var)


state 130

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 142


state 131

   32 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 32 (relation_expr)


state 132

   44 comp: error ';' .

    $default  reduce using rule 44 (comp)


state 133

   29 relation_expr: NOT expression comp expression .

    $default  reduce using rule 29 (relation_expr)


state 134

   54 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 54 (term)


state 135

   60 expressions: expression COMMA . expressions

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 113
    multiplicative_expr  go to state 53
    term                 go to state 54
    expressions          go to state 143
    var                  go to state 55


state 136

   58 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 58 (term)


state 137

   15 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 15 (statement)


state 138

   16 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 12 (statements)

    statements  go to state 144
    statement   go to state 38
    var         go to state 39


state 139

   17 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)


state 140

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    bool_expr            go to state 145
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 141

   19 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    bool_expr            go to state 146
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 142

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


state 143

   60 expressions: expression COMMA expressions .

    $default  reduce using rule 60 (expressions)


state 144

   16 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 147


state 145

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 18 (statement)


state 146

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 148


state 147

   16 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 16 (statement)


state 148

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 36

    var  go to state 149


state 149

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 150


state 150

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48

    expression           go to state 151
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


state 151

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 152


state 152

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    FOR       shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 12 (statements)

    statements  go to state 153
    statement   go to state 38
    var         go to state 39


state 153

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 154


state 154

   19 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)
