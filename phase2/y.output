Terminals unused in grammar

    ERROR


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program function

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    4         | FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations
    7             | declaration error declarations

    8 declaration: identifiers COLON INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   11 identifiers: ident
   12            | ident COMMA identifiers

   13 ident: IDENT

   14 statements: %empty
   15           | statement SEMICOLON statements
   16           | statement error statements

   17 statement: var ASSIGN expression
   18          | IF bool_expr THEN statements ENDIF
   19          | IF bool_expr THEN statements ELSE statements ENDIF
   20          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   21          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   22          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   23          | READ vars
   24          | WRITE vars
   25          | CONTINUE
   26          | RETURN expression
   27          | var error expression

   28 bool_expr: relation_and_expr
   29          | relation_and_expr OR bool_expr

   30 relation_and_expr: relation_expr
   31                  | relation_and_expr AND relation_expr

   32 relation_expr: NOT expression comp expression
   33              | NOT TRUE
   34              | NOT FALSE
   35              | NOT L_PAREN bool_expr R_PAREN
   36              | expression comp expression
   37              | TRUE
   38              | FALSE
   39              | L_PAREN bool_expr R_PAREN

   40 comp: EQ
   41     | NEQ
   42     | LT
   43     | GT
   44     | LTE
   45     | GTE

   46 expression: multiplicative_expr
   47           | multiplicative_expr ADD expression
   48           | multiplicative_expr SUB expression

   49 multiplicative_expr: term
   50                    | term MULT term
   51                    | term DIV term
   52                    | term MOD term

   53 term: SUB var
   54     | SUB NUMBER
   55     | SUB L_PAREN expression R_PAREN
   56     | var
   57     | NUMBER
   58     | L_PAREN expression R_PAREN
   59     | IDENT L_PAREN expressions R_PAREN

   60 expressions: expression
   61            | expression COMMA expressions

   62 var: ident
   63    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   64 vars: var
   65     | var COMMA vars
   66     | error vars


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4 7 16 27 66
    FUNCTION (258) 3 4
    BEGIN_PARAMS (259) 3 4
    END_PARAMS (260) 3 4
    BEGIN_LOCALS (261) 3 4
    END_LOCALS (262) 3 4
    BEGIN_BODY (263) 3 4
    END_BODY (264) 3 4
    INTEGER (265) 8 9 10
    ARRAY (266) 9 10
    OF (267) 9 10
    IF (268) 18 19
    THEN (269) 18 19
    ENDIF (270) 18 19
    ELSE (271) 19
    WHILE (272) 20 21
    DO (273) 21
    FOR (274) 22
    BEGINLOOP (275) 20 21 22
    ENDLOOP (276) 20 21 22
    CONTINUE (277) 25
    READ (278) 23
    WRITE (279) 24
    AND (280) 31
    OR (281) 29
    NOT (282) 32 33 34 35
    TRUE (283) 33 37
    FALSE (284) 34 38
    RETURN (285) 26
    SUB (286) 48 53 54 55
    ADD (287) 47
    MULT (288) 50
    DIV (289) 51
    MOD (290) 52
    EQ (291) 40
    NEQ (292) 41
    LT (293) 42
    GT (294) 43
    LTE (295) 44
    GTE (296) 45
    SEMICOLON (297) 3 6 15 22
    COLON (298) 8 9 10
    COMMA (299) 12 61 65
    L_PAREN (300) 35 39 55 58 59
    R_PAREN (301) 35 39 55 58 59
    L_SQUARE_BRACKET (302) 9 10 63
    R_SQUARE_BRACKET (303) 9 10 63
    ASSIGN (304) 17 22
    IDENT <cval> (305) 3 4 13 59
    NUMBER <ival> (306) 9 10 22 54 57
    ERROR (307)
    UMINUS (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1 2
        on right: 0 2
    function (56)
        on left: 3 4
        on right: 2
    declarations (57)
        on left: 5 6 7
        on right: 3 4 6 7
    declaration (58)
        on left: 8 9 10
        on right: 6 7
    identifiers (59)
        on left: 11 12
        on right: 8 9 10 12
    ident (60)
        on left: 13
        on right: 11 12 62 63
    statements (61)
        on left: 14 15 16
        on right: 3 4 15 16 18 19 20 21 22
    statement (62)
        on left: 17 18 19 20 21 22 23 24 25 26 27
        on right: 15 16
    bool_expr (63)
        on left: 28 29
        on right: 18 19 20 21 22 29 35 39
    relation_and_expr (64)
        on left: 30 31
        on right: 28 29 31
    relation_expr (65)
        on left: 32 33 34 35 36 37 38 39
        on right: 30 31
    comp (66)
        on left: 40 41 42 43 44 45
        on right: 32 36
    expression (67)
        on left: 46 47 48
        on right: 17 22 26 27 32 36 47 48 55 58 60 61 63
    multiplicative_expr (68)
        on left: 49 50 51 52
        on right: 46 47 48
    term (69)
        on left: 53 54 55 56 57 58 59
        on right: 49 50 51 52
    expressions (70)
        on left: 60 61
        on right: 59 61
    var (71)
        on left: 62 63
        on right: 17 22 27 53 56 64 65
    vars (72)
        on left: 64 65 66
        on right: 23 24 65 66


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . function

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program $end .

    $default  accept


State 3

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    4         | FUNCTION . IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 4

    2 program: program function .

    $default  reduce using rule 2 (program)


State 5

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
    4         | FUNCTION IDENT . error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error      shift, and go to state 6
    SEMICOLON  shift, and go to state 7


State 6

    4 function: FUNCTION IDENT error . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 7

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 8

    4 function: FUNCTION IDENT error BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 9

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 15
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 10

   13 ident: IDENT .

    $default  reduce using rule 13 (ident)


State 11

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 12

    6 declarations: declaration . SEMICOLON declarations
    7             | declaration . error declarations

    error      shift, and go to state 17
    SEMICOLON  shift, and go to state 18


State 13

    8 declaration: identifiers . COLON INTEGER
    9            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 14

   11 identifiers: ident .
   12            | ident . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 11 (identifiers)


State 15

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 21


State 16

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 17

    7 declarations: declaration error . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 18

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 24
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 19

    8 declaration: identifiers COLON . INTEGER
    9            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 25
    ARRAY    shift, and go to state 26


State 20

   12 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 10

    identifiers  go to state 27
    ident        go to state 14


State 21

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 28


State 22

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 29
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 23

    7 declarations: declaration error declarations .

    $default  reduce using rule 7 (declarations)


State 24

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 25

    8 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 26

    9 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 30


State 27

   12 identifiers: ident COMMA identifiers .

    $default  reduce using rule 12 (identifiers)


State 28

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 31
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 29

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 32


State 30

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 33


State 31

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 34


State 32

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 35


State 33

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 36


State 34

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 37


State 35

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45
    IDENT     shift, and go to state 10

    $default  reduce using rule 14 (statements)

    ident       go to state 46
    statements  go to state 47
    statement   go to state 48
    var         go to state 49


State 36

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 50
    L_SQUARE_BRACKET  shift, and go to state 51


State 37

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45
    IDENT     shift, and go to state 10

    $default  reduce using rule 14 (statements)

    ident       go to state 46
    statements  go to state 52
    statement   go to state 48
    var         go to state 49


State 38

   18 statement: IF . bool_expr THEN statements ENDIF
   19          | IF . bool_expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    bool_expr            go to state 60
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 39

   20 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    bool_expr            go to state 67
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 40

   21 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 68


State 41

   22 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 10

    ident  go to state 46
    var    go to state 69


State 42

   25 statement: CONTINUE .

    $default  reduce using rule 25 (statement)


State 43

   23 statement: READ . vars

    error  shift, and go to state 70
    IDENT  shift, and go to state 10

    ident  go to state 46
    var    go to state 71
    vars   go to state 72


State 44

   24 statement: WRITE . vars

    error  shift, and go to state 70
    IDENT  shift, and go to state 10

    ident  go to state 46
    var    go to state 71
    vars   go to state 73


State 45

   26 statement: RETURN . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 75
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 46

   62 var: ident .
   63    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 76

    $default  reduce using rule 62 (var)


State 47

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 77


State 48

   15 statements: statement . SEMICOLON statements
   16           | statement . error statements

    error      shift, and go to state 78
    SEMICOLON  shift, and go to state 79


State 49

   17 statement: var . ASSIGN expression
   27          | var . error expression

    error   shift, and go to state 80
    ASSIGN  shift, and go to state 81


State 50

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 82


State 51

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 83


State 52

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 84


State 53

   32 relation_expr: NOT . expression comp expression
   33              | NOT . TRUE
   34              | NOT . FALSE
   35              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 85
    FALSE    shift, and go to state 86
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 87
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 88
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 54

   37 relation_expr: TRUE .

    $default  reduce using rule 37 (relation_expr)


State 55

   38 relation_expr: FALSE .

    $default  reduce using rule 38 (relation_expr)


State 56

   53 term: SUB . var
   54     | SUB . NUMBER
   55     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 89
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 90

    ident  go to state 46
    var    go to state 91


State 57

   39 relation_expr: L_PAREN . bool_expr R_PAREN
   58 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    bool_expr            go to state 92
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expression           go to state 93
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 58

   13 ident: IDENT .
   59 term: IDENT . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 94

    $default  reduce using rule 13 (ident)


State 59

   57 term: NUMBER .

    $default  reduce using rule 57 (term)


State 60

   18 statement: IF bool_expr . THEN statements ENDIF
   19          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 95


State 61

   28 bool_expr: relation_and_expr .
   29          | relation_and_expr . OR bool_expr
   31 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 96
    OR   shift, and go to state 97

    $default  reduce using rule 28 (bool_expr)


State 62

   30 relation_and_expr: relation_expr .

    $default  reduce using rule 30 (relation_and_expr)


State 63

   36 relation_expr: expression . comp expression

    EQ   shift, and go to state 98
    NEQ  shift, and go to state 99
    LT   shift, and go to state 100
    GT   shift, and go to state 101
    LTE  shift, and go to state 102
    GTE  shift, and go to state 103

    comp  go to state 104


State 64

   46 expression: multiplicative_expr .
   47           | multiplicative_expr . ADD expression
   48           | multiplicative_expr . SUB expression

    SUB  shift, and go to state 105
    ADD  shift, and go to state 106

    $default  reduce using rule 46 (expression)


State 65

   49 multiplicative_expr: term .
   50                    | term . MULT term
   51                    | term . DIV term
   52                    | term . MOD term

    MULT  shift, and go to state 107
    DIV   shift, and go to state 108
    MOD   shift, and go to state 109

    $default  reduce using rule 49 (multiplicative_expr)


State 66

   56 term: var .

    $default  reduce using rule 56 (term)


State 67

   20 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 110


State 68

   21 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45
    IDENT     shift, and go to state 10

    $default  reduce using rule 14 (statements)

    ident       go to state 46
    statements  go to state 111
    statement   go to state 48
    var         go to state 49


State 69

   22 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 112


State 70

   66 vars: error . vars

    error  shift, and go to state 70
    IDENT  shift, and go to state 10

    ident  go to state 46
    var    go to state 71
    vars   go to state 113


State 71

   64 vars: var .
   65     | var . COMMA vars

    COMMA  shift, and go to state 114

    $default  reduce using rule 64 (vars)


State 72

   23 statement: READ vars .

    $default  reduce using rule 23 (statement)


State 73

   24 statement: WRITE vars .

    $default  reduce using rule 24 (statement)


State 74

   58 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 115
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 75

   26 statement: RETURN expression .

    $default  reduce using rule 26 (statement)


State 76

   63 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 116
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 77

    4 function: FUNCTION IDENT error BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 78

   16 statements: statement error . statements

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45
    IDENT     shift, and go to state 10

    $default  reduce using rule 14 (statements)

    ident       go to state 46
    statements  go to state 117
    statement   go to state 48
    var         go to state 49


State 79

   15 statements: statement SEMICOLON . statements

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45
    IDENT     shift, and go to state 10

    $default  reduce using rule 14 (statements)

    ident       go to state 46
    statements  go to state 118
    statement   go to state 48
    var         go to state 49


State 80

   27 statement: var error . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 119
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 81

   17 statement: var ASSIGN . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 120
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 82

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 83

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 121


State 84

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 3 (function)


State 85

   33 relation_expr: NOT TRUE .

    $default  reduce using rule 33 (relation_expr)


State 86

   34 relation_expr: NOT FALSE .

    $default  reduce using rule 34 (relation_expr)


State 87

   35 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   58 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    bool_expr            go to state 122
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expression           go to state 93
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 88

   32 relation_expr: NOT expression . comp expression

    EQ   shift, and go to state 98
    NEQ  shift, and go to state 99
    LT   shift, and go to state 100
    GT   shift, and go to state 101
    LTE  shift, and go to state 102
    GTE  shift, and go to state 103

    comp  go to state 123


State 89

   55 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 124
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 90

   54 term: SUB NUMBER .

    $default  reduce using rule 54 (term)


State 91

   53 term: SUB var .

    $default  reduce using rule 53 (term)


State 92

   39 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 125


State 93

   36 relation_expr: expression . comp expression
   58 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 98
    NEQ      shift, and go to state 99
    LT       shift, and go to state 100
    GT       shift, and go to state 101
    LTE      shift, and go to state 102
    GTE      shift, and go to state 103
    R_PAREN  shift, and go to state 126

    comp  go to state 104


State 94

   59 term: IDENT L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 127
    multiplicative_expr  go to state 64
    term                 go to state 65
    expressions          go to state 128
    var                  go to state 66


State 95

   18 statement: IF bool_expr THEN . statements ENDIF
   19          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45
    IDENT     shift, and go to state 10

    $default  reduce using rule 14 (statements)

    ident       go to state 46
    statements  go to state 129
    statement   go to state 48
    var         go to state 49


State 96

   31 relation_and_expr: relation_and_expr AND . relation_expr

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    relation_expr        go to state 130
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 97

   29 bool_expr: relation_and_expr OR . bool_expr

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    bool_expr            go to state 131
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 98

   40 comp: EQ .

    $default  reduce using rule 40 (comp)


State 99

   41 comp: NEQ .

    $default  reduce using rule 41 (comp)


State 100

   42 comp: LT .

    $default  reduce using rule 42 (comp)


State 101

   43 comp: GT .

    $default  reduce using rule 43 (comp)


State 102

   44 comp: LTE .

    $default  reduce using rule 44 (comp)


State 103

   45 comp: GTE .

    $default  reduce using rule 45 (comp)


State 104

   36 relation_expr: expression comp . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 132
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 105

   48 expression: multiplicative_expr SUB . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 133
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 106

   47 expression: multiplicative_expr ADD . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 134
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 107

   50 multiplicative_expr: term MULT . term

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident  go to state 46
    term   go to state 135
    var    go to state 66


State 108

   51 multiplicative_expr: term DIV . term

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident  go to state 46
    term   go to state 136
    var    go to state 66


State 109

   52 multiplicative_expr: term MOD . term

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident  go to state 46
    term   go to state 137
    var    go to state 66


State 110

   20 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45
    IDENT     shift, and go to state 10

    $default  reduce using rule 14 (statements)

    ident       go to state 46
    statements  go to state 138
    statement   go to state 48
    var         go to state 49


State 111

   21 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 139


State 112

   22 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 140


State 113

   66 vars: error vars .

    $default  reduce using rule 66 (vars)


State 114

   65 vars: var COMMA . vars

    error  shift, and go to state 70
    IDENT  shift, and go to state 10

    ident  go to state 46
    var    go to state 71
    vars   go to state 141


State 115

   58 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 126


State 116

   63 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 142


State 117

   16 statements: statement error statements .

    $default  reduce using rule 16 (statements)


State 118

   15 statements: statement SEMICOLON statements .

    $default  reduce using rule 15 (statements)


State 119

   27 statement: var error expression .

    $default  reduce using rule 27 (statement)


State 120

   17 statement: var ASSIGN expression .

    $default  reduce using rule 17 (statement)


State 121

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 143


State 122

   35 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 144


State 123

   32 relation_expr: NOT expression comp . expression

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 145
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 124

   55 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 146


State 125

   39 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 39 (relation_expr)


State 126

   58 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


State 127

   60 expressions: expression .
   61            | expression . COMMA expressions

    COMMA  shift, and go to state 147

    $default  reduce using rule 60 (expressions)


State 128

   59 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 148


State 129

   18 statement: IF bool_expr THEN statements . ENDIF
   19          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 149
    ELSE   shift, and go to state 150


State 130

   31 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 31 (relation_and_expr)


State 131

   29 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 29 (bool_expr)


State 132

   36 relation_expr: expression comp expression .

    $default  reduce using rule 36 (relation_expr)


State 133

   48 expression: multiplicative_expr SUB expression .

    $default  reduce using rule 48 (expression)


State 134

   47 expression: multiplicative_expr ADD expression .

    $default  reduce using rule 47 (expression)


State 135

   50 multiplicative_expr: term MULT term .

    $default  reduce using rule 50 (multiplicative_expr)


State 136

   51 multiplicative_expr: term DIV term .

    $default  reduce using rule 51 (multiplicative_expr)


State 137

   52 multiplicative_expr: term MOD term .

    $default  reduce using rule 52 (multiplicative_expr)


State 138

   20 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 151


State 139

   21 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 152


State 140

   22 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 153


State 141

   65 vars: var COMMA vars .

    $default  reduce using rule 65 (vars)


State 142

   63 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 63 (var)


State 143

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 154


State 144

   35 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 35 (relation_expr)


State 145

   32 relation_expr: NOT expression comp expression .

    $default  reduce using rule 32 (relation_expr)


State 146

   55 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 55 (term)


State 147

   61 expressions: expression COMMA . expressions

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 127
    multiplicative_expr  go to state 64
    term                 go to state 65
    expressions          go to state 155
    var                  go to state 66


State 148

   59 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 59 (term)


State 149

   18 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 18 (statement)


State 150

   19 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45
    IDENT     shift, and go to state 10

    $default  reduce using rule 14 (statements)

    ident       go to state 46
    statements  go to state 156
    statement   go to state 48
    var         go to state 49


State 151

   20 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (statement)


State 152

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    bool_expr            go to state 157
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 153

   22 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 53
    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    bool_expr            go to state 158
    relation_and_expr    go to state 61
    relation_expr        go to state 62
    expression           go to state 63
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 154

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 155

   61 expressions: expression COMMA expressions .

    $default  reduce using rule 61 (expressions)


State 156

   19 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 159


State 157

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 21 (statement)


State 158

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 160


State 159

   19 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 19 (statement)


State 160

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 10

    ident  go to state 46
    var    go to state 161


State 161

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 162


State 162

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    SUB      shift, and go to state 56
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 58
    NUMBER   shift, and go to state 59

    ident                go to state 46
    expression           go to state 163
    multiplicative_expr  go to state 64
    term                 go to state 65
    var                  go to state 66


State 163

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 164


State 164

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    CONTINUE  shift, and go to state 42
    READ      shift, and go to state 43
    WRITE     shift, and go to state 44
    RETURN    shift, and go to state 45
    IDENT     shift, and go to state 10

    $default  reduce using rule 14 (statements)

    ident       go to state 46
    statements  go to state 165
    statement   go to state 48
    var         go to state 49


State 165

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 166


State 166

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 22 (statement)
