State 1 conflicts: 2 shift/reduce
State 5 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program functions

    3 functions: /* empty */
    4          | function functions

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    6 declarations: /* empty */
    7             | declaration SEMICOLON declarations

    8 declaration: identifiers COLON INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   11 identifiers: ident
   12            | ident COMMA identifiers

   13 ident: IDENT

   14 statements: /* empty */
   15           | statement SEMICOLON statements

   16 statement: var ASSIGN expression
   17          | IF bool_expr THEN statements ENDIF
   18          | IF bool_expr THEN statements ELSE statements ENDIF
   19          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   20          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   21          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP
   22          | READ vars
   23          | WRITE vars
   24          | CONTINUE
   25          | RETURN expression

   26 bool_expr: relation_and_expr
   27          | relation_and_expr OR relation_and_expr

   28 relation_and_expr: relation_expr
   29                  | relation_expr AND relation_expr

   30 relation_expr: NOT expression comp expression
   31              | NOT TRUE
   32              | NOT FALSE
   33              | NOT L_PAREN bool_expr R_PAREN
   34              | expression comp expression
   35              | TRUE
   36              | FALSE
   37              | L_PAREN bool_expr R_PAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 expression: multiplicative_expr
   45           | multiplicative_expr ADD multiplicative_expr
   46           | multiplicative_expr SUB multiplicative_expr

   47 multiplicative_expr: term
   48                    | term MULT term
   49                    | term DIV term
   50                    | term MOD term

   51 term: SUB var
   52     | SUB NUMBER
   53     | SUB L_PAREN expression R_PAREN
   54     | var
   55     | NUMBER
   56     | L_PAREN expression R_PAREN
   57     | IDENT L_PAREN expressions R_PAREN

   58 expressions: expression
   59            | expression COMMA expressions

   60 var: IDENT
   61    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   62 vars: var
   63     | var COMMA vars


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_LOCALS (261) 5
END_LOCALS (262) 5
BEGIN_BODY (263) 5
END_BODY (264) 5
INTEGER (265) 8 9 10
ARRAY (266) 9 10
OF (267) 9 10
IF (268) 17 18
THEN (269) 17 18
ENDIF (270) 17 18
ELSE (271) 18
WHILE (272) 19 20
DO (273) 20
FOR (274) 21
BEGINLOOP (275) 19 20 21
ENDLOOP (276) 19 20 21
CONTINUE (277) 24
READ (278) 22
WRITE (279) 23
AND (280) 29
OR (281) 27
NOT (282) 30 31 32 33
TRUE (283) 31 35
FALSE (284) 32 36
RETURN (285) 25
SUB (286) 46 51 52 53
ADD (287) 45
MULT (288) 48
DIV (289) 49
MOD (290) 50
EQ (291) 38
NEQ (292) 39
LT (293) 40
GT (294) 41
LTE (295) 42
GTE (296) 43
SEMICOLON (297) 5 7 15 21
COLON (298) 8 9 10
COMMA (299) 12 59 63
L_PAREN (300) 33 37 53 56 57
R_PAREN (301) 33 37 53 56 57
L_SQUARE_BRACKET (302) 9 10 61
R_SQUARE_BRACKET (303) 9 10 61
ASSIGN (304) 16 21
IDENT (305) 5 13 57 60 61
NUMBER (306) 9 10 21 52 55


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 2
functions (54)
    on left: 3 4, on right: 2 4
function (55)
    on left: 5, on right: 4
declarations (56)
    on left: 6 7, on right: 5 7
declaration (57)
    on left: 8 9 10, on right: 7
identifiers (58)
    on left: 11 12, on right: 8 9 10 12
ident (59)
    on left: 13, on right: 11 12
statements (60)
    on left: 14 15, on right: 5 15 17 18 19 20 21
statement (61)
    on left: 16 17 18 19 20 21 22 23 24 25, on right: 15
bool_expr (62)
    on left: 26 27, on right: 17 18 19 20 21 33 37
relation_and_expr (63)
    on left: 28 29, on right: 26 27
relation_expr (64)
    on left: 30 31 32 33 34 35 36 37, on right: 28 29
comp (65)
    on left: 38 39 40 41 42 43, on right: 30 34
expression (66)
    on left: 44 45 46, on right: 16 21 25 30 34 53 56 58 59 61
multiplicative_expr (67)
    on left: 47 48 49 50, on right: 44 45 46
term (68)
    on left: 51 52 53 54 55 56 57, on right: 47 48 49 50
expressions (69)
    on left: 58 59, on right: 57 59
var (70)
    on left: 60 61, on right: 16 21 51 54 62 63
vars (71)
    on left: 62 63, on right: 22 23 63


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    2 program: program . functions

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    $end      [reduce using rule 3 (functions)]
    FUNCTION  [reduce using rule 3 (functions)]

    functions  go to state 4
    function   go to state 5


state 2

    0 $accept: program $end .

    $default  accept


state 3

    5 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


state 4

    2 program: program functions .

    $default  reduce using rule 2 (program)


state 5

    4 functions: function . functions

    FUNCTION  shift, and go to state 3

    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 3 (functions)

    functions  go to state 7
    function   go to state 5


state 6

    5 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


state 7

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


state 8

    5 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


state 9

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


state 10

   13 ident: IDENT .

    $default  reduce using rule 13 (ident)


state 11

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


state 12

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


state 13

    8 declaration: identifiers . COLON INTEGER
    9            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


state 14

   11 identifiers: ident .
   12            | ident . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 11 (identifiers)


state 15

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


state 16

    7 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


state 17

    8 declaration: identifiers COLON . INTEGER
    9            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


state 18

   12 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 10

    identifiers  go to state 23
    ident        go to state 14


state 19

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 24
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


state 20

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


state 21

    8 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 8 (declaration)


state 22

    9 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


state 23

   12 identifiers: ident COMMA identifiers .

    $default  reduce using rule 12 (identifiers)


state 24

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 26


state 25

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


state 26

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 28


state 27

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


state 28

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 14 (statements)

    statements  go to state 39
    statement   go to state 40
    var         go to state 41


state 29

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 42
    L_SQUARE_BRACKET  shift, and go to state 43


state 30

   17 statement: IF . bool_expr THEN statements ENDIF
   18          | IF . bool_expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 51
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 31

   19 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 58
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 32

   20 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 59


state 33

   21 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 38

    var  go to state 60


state 34

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


state 35

   22 statement: READ . vars

    IDENT  shift, and go to state 38

    var   go to state 61
    vars  go to state 62


state 36

   23 statement: WRITE . vars

    IDENT  shift, and go to state 38

    var   go to state 61
    vars  go to state 63


state 37

   25 statement: RETURN . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 65
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 38

   60 var: IDENT .
   61    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 60 (var)


state 39

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 67


state 40

   15 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 68


state 41

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 69


state 42

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 70


state 43

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 71


state 44

   30 relation_expr: NOT . expression comp expression
   31              | NOT . TRUE
   32              | NOT . FALSE
   33              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 72
    FALSE    shift, and go to state 73
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 75
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 45

   35 relation_expr: TRUE .

    $default  reduce using rule 35 (relation_expr)


state 46

   36 relation_expr: FALSE .

    $default  reduce using rule 36 (relation_expr)


state 47

   51 term: SUB . var
   52     | SUB . NUMBER
   53     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 38
    NUMBER   shift, and go to state 77

    var  go to state 78


state 48

   37 relation_expr: L_PAREN . bool_expr R_PAREN
   56 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 79
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 80
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 49

   57 term: IDENT . L_PAREN expressions R_PAREN
   60 var: IDENT .
   61    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 81
    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 60 (var)


state 50

   55 term: NUMBER .

    $default  reduce using rule 55 (term)


state 51

   17 statement: IF bool_expr . THEN statements ENDIF
   18          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 82


state 52

   26 bool_expr: relation_and_expr .
   27          | relation_and_expr . OR relation_and_expr

    OR  shift, and go to state 83

    $default  reduce using rule 26 (bool_expr)


state 53

   28 relation_and_expr: relation_expr .
   29                  | relation_expr . AND relation_expr

    AND  shift, and go to state 84

    $default  reduce using rule 28 (relation_and_expr)


state 54

   34 relation_expr: expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 91


state 55

   44 expression: multiplicative_expr .
   45           | multiplicative_expr . ADD multiplicative_expr
   46           | multiplicative_expr . SUB multiplicative_expr

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 44 (expression)


state 56

   47 multiplicative_expr: term .
   48                    | term . MULT term
   49                    | term . DIV term
   50                    | term . MOD term

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 47 (multiplicative_expr)


state 57

   54 term: var .

    $default  reduce using rule 54 (term)


state 58

   19 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 97


state 59

   20 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 14 (statements)

    statements  go to state 98
    statement   go to state 40
    var         go to state 41


state 60

   21 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 99


state 61

   62 vars: var .
   63     | var . COMMA vars

    COMMA  shift, and go to state 100

    $default  reduce using rule 62 (vars)


state 62

   22 statement: READ vars .

    $default  reduce using rule 22 (statement)


state 63

   23 statement: WRITE vars .

    $default  reduce using rule 23 (statement)


state 64

   56 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 101
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 65

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


state 66

   61 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 102
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 67

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


state 68

   15 statements: statement SEMICOLON . statements

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 14 (statements)

    statements  go to state 103
    statement   go to state 40
    var         go to state 41


state 69

   16 statement: var ASSIGN . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 104
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 70

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


state 71

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 105


state 72

   31 relation_expr: NOT TRUE .

    $default  reduce using rule 31 (relation_expr)


state 73

   32 relation_expr: NOT FALSE .

    $default  reduce using rule 32 (relation_expr)


state 74

   33 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   56 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 106
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 80
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 75

   30 relation_expr: NOT expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 107


state 76

   53 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 108
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 77

   52 term: SUB NUMBER .

    $default  reduce using rule 52 (term)


state 78

   51 term: SUB var .

    $default  reduce using rule 51 (term)


state 79

   37 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 109


state 80

   34 relation_expr: expression . comp expression
   56 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86
    LT       shift, and go to state 87
    GT       shift, and go to state 88
    LTE      shift, and go to state 89
    GTE      shift, and go to state 90
    R_PAREN  shift, and go to state 110

    comp  go to state 91


state 81

   57 term: IDENT L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 111
    multiplicative_expr  go to state 55
    term                 go to state 56
    expressions          go to state 112
    var                  go to state 57


state 82

   17 statement: IF bool_expr THEN . statements ENDIF
   18          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 14 (statements)

    statements  go to state 113
    statement   go to state 40
    var         go to state 41


state 83

   27 bool_expr: relation_and_expr OR . relation_and_expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    relation_and_expr    go to state 114
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 84

   29 relation_and_expr: relation_expr AND . relation_expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    relation_expr        go to state 115
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 85

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


state 86

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


state 87

   40 comp: LT .

    $default  reduce using rule 40 (comp)


state 88

   41 comp: GT .

    $default  reduce using rule 41 (comp)


state 89

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


state 90

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


state 91

   34 relation_expr: expression comp . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 116
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 92

   46 expression: multiplicative_expr SUB . multiplicative_expr

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    multiplicative_expr  go to state 117
    term                 go to state 56
    var                  go to state 57


state 93

   45 expression: multiplicative_expr ADD . multiplicative_expr

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    multiplicative_expr  go to state 118
    term                 go to state 56
    var                  go to state 57


state 94

   48 multiplicative_expr: term MULT . term

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    term  go to state 119
    var   go to state 57


state 95

   49 multiplicative_expr: term DIV . term

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    term  go to state 120
    var   go to state 57


state 96

   50 multiplicative_expr: term MOD . term

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    term  go to state 121
    var   go to state 57


state 97

   19 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 14 (statements)

    statements  go to state 122
    statement   go to state 40
    var         go to state 41


state 98

   20 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 123


state 99

   21 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 124


state 100

   63 vars: var COMMA . vars

    IDENT  shift, and go to state 38

    var   go to state 61
    vars  go to state 125


state 101

   56 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110


state 102

   61 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 126


state 103

   15 statements: statement SEMICOLON statements .

    $default  reduce using rule 15 (statements)


state 104

   16 statement: var ASSIGN expression .

    $default  reduce using rule 16 (statement)


state 105

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 127


state 106

   33 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 128


state 107

   30 relation_expr: NOT expression comp . expression

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 129
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 108

   53 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 130


state 109

   37 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 37 (relation_expr)


state 110

   56 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 56 (term)


state 111

   58 expressions: expression .
   59            | expression . COMMA expressions

    COMMA  shift, and go to state 131

    $default  reduce using rule 58 (expressions)


state 112

   57 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 132


state 113

   17 statement: IF bool_expr THEN statements . ENDIF
   18          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 133
    ELSE   shift, and go to state 134


state 114

   27 bool_expr: relation_and_expr OR relation_and_expr .

    $default  reduce using rule 27 (bool_expr)


state 115

   29 relation_and_expr: relation_expr AND relation_expr .

    $default  reduce using rule 29 (relation_and_expr)


state 116

   34 relation_expr: expression comp expression .

    $default  reduce using rule 34 (relation_expr)


state 117

   46 expression: multiplicative_expr SUB multiplicative_expr .

    $default  reduce using rule 46 (expression)


state 118

   45 expression: multiplicative_expr ADD multiplicative_expr .

    $default  reduce using rule 45 (expression)


state 119

   48 multiplicative_expr: term MULT term .

    $default  reduce using rule 48 (multiplicative_expr)


state 120

   49 multiplicative_expr: term DIV term .

    $default  reduce using rule 49 (multiplicative_expr)


state 121

   50 multiplicative_expr: term MOD term .

    $default  reduce using rule 50 (multiplicative_expr)


state 122

   19 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 135


state 123

   20 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 136


state 124

   21 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 137


state 125

   63 vars: var COMMA vars .

    $default  reduce using rule 63 (vars)


state 126

   61 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 61 (var)


state 127

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 138


state 128

   33 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 33 (relation_expr)


state 129

   30 relation_expr: NOT expression comp expression .

    $default  reduce using rule 30 (relation_expr)


state 130

   53 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 53 (term)


state 131

   59 expressions: expression COMMA . expressions

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 111
    multiplicative_expr  go to state 55
    term                 go to state 56
    expressions          go to state 139
    var                  go to state 57


state 132

   57 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 57 (term)


state 133

   17 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 17 (statement)


state 134

   18 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 14 (statements)

    statements  go to state 140
    statement   go to state 40
    var         go to state 41


state 135

   19 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


state 136

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 141
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 137

   21 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    bool_expr            go to state 142
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 138

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


state 139

   59 expressions: expression COMMA expressions .

    $default  reduce using rule 59 (expressions)


state 140

   18 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 143


state 141

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 20 (statement)


state 142

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 144


state 143

   18 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 18 (statement)


state 144

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 38

    var  go to state 145


state 145

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 146


state 146

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP statements ENDLOOP

    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 49
    NUMBER   shift, and go to state 50

    expression           go to state 147
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57


state 147

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 148


state 148

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 14 (statements)

    statements  go to state 149
    statement   go to state 40
    var         go to state 41


state 149

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 150


state 150

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)
